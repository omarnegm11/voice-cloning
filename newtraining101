{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/omarnegm11/voice-cloning/blob/main/newtraining101\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 查看显卡\n",
        "!nvidia-smi"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0gQcIZ8RsOkn",
        "outputId": "e3d81783-1ae6-4901-9ef7-3b918cbe9013"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sat Aug 23 09:56:49 2025       \n",
            "+-----------------------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |\n",
            "|-----------------------------------------+------------------------+----------------------+\n",
            "| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n",
            "|                                         |                        |               MIG M. |\n",
            "|=========================================+========================+======================|\n",
            "|   0  Tesla T4                       Off |   00000000:00:04.0 Off |                    0 |\n",
            "| N/A   50C    P8             10W /   70W |       0MiB /  15360MiB |      0%      Default |\n",
            "|                                         |                        |                  N/A |\n",
            "+-----------------------------------------+------------------------+----------------------+\n",
            "                                                                                         \n",
            "+-----------------------------------------------------------------------------------------+\n",
            "| Processes:                                                                              |\n",
            "|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n",
            "|        ID   ID                                                               Usage      |\n",
            "|=========================================================================================|\n",
            "|  No running processes found                                                             |\n",
            "+-----------------------------------------------------------------------------------------+\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "LS0OPRkL4Pme",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e59dcdab-9b87-4680-ef7e-5378cfb3dfdd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'so-vits-svc'...\n",
            "remote: Enumerating objects: 931, done.\u001b[K\n",
            "remote: Counting objects: 100% (18/18), done.\u001b[K\n",
            "remote: Compressing objects: 100% (18/18), done.\u001b[K\n",
            "remote: Total 931 (delta 3), reused 1 (delta 0), pack-reused 913 (from 1)\u001b[K\n",
            "Receiving objects: 100% (931/931), 25.41 MiB | 19.47 MiB/s, done.\n",
            "Resolving deltas: 100% (446/446), done.\n"
          ]
        }
      ],
      "source": [
        "#@title 克隆的github仓库\n",
        "#@markdown ##选择要克隆的github仓库分支\n",
        "Clone = \"32k\" #@param [\"32k\",\"48k\"]\n",
        "if Clone == \"32k\":\n",
        "  !git clone https://github.com/innnky/so-vits-svc -b 32k\n",
        "elif Clone == \"48k\":\n",
        "  !git clone https://github.com/innnky/so-vits-svc -b main"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 安装依赖\n",
        "%cd /content/so-vits-svc\n",
        "!pip install pyworld praat-parselmouth\n"
      ],
      "metadata": {
        "id": "zXBLkXxL4T1O",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5a561e5f-363d-4630-a399-bf29f24cdb0a"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/so-vits-svc\n",
            "Collecting pyworld\n",
            "  Downloading pyworld-0.3.5.tar.gz (261 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m261.0/261.0 kB\u001b[0m \u001b[31m8.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting praat-parselmouth\n",
            "  Downloading praat_parselmouth-0.4.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.9 kB)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (from pyworld) (2.0.2)\n",
            "Downloading praat_parselmouth-0.4.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.7 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.7/10.7 MB\u001b[0m \u001b[31m119.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hBuilding wheels for collected packages: pyworld\n",
            "  Building wheel for pyworld (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyworld: filename=pyworld-0.3.5-cp312-cp312-linux_x86_64.whl size=966259 sha256=783dd7889e71a80f5b0d666b791f9499ee3f843bfe239093edc2fd2303565ee1\n",
            "  Stored in directory: /root/.cache/pip/wheels/be/ac/58/c6a1791ec6d17f3a99b6ccdec92b472f560cb5c564b83dd77e\n",
            "Successfully built pyworld\n",
            "Installing collected packages: pyworld, praat-parselmouth\n",
            "Successfully installed praat-parselmouth-0.4.6 pyworld-0.3.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 下载必要模型文件\n",
        "!wget -P hubert/ https://github.com/bshall/hubert/releases/download/v0.1/hubert-soft-0d54a1f4.pt"
      ],
      "metadata": {
        "id": "pCqf3W0d6ify",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9ac79fd0-4d9e-4c6f-d2fc-5d36061f6ff2"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2025-08-23 09:57:39--  https://github.com/bshall/hubert/releases/download/v0.1/hubert-soft-0d54a1f4.pt\n",
            "Resolving github.com (github.com)... 140.82.112.3\n",
            "Connecting to github.com (github.com)|140.82.112.3|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://release-assets.githubusercontent.com/github-production-release-asset/417578841/6eaffd96-4bcb-4978-ac67-80857af26838?sp=r&sv=2018-11-09&sr=b&spr=https&se=2025-08-23T10%3A35%3A43Z&rscd=attachment%3B+filename%3Dhubert-soft-0d54a1f4.pt&rsct=application%2Foctet-stream&skoid=96c2d410-5711-43a1-aedd-ab1947aa7ab0&sktid=398a6654-997b-47e9-b12b-9515b896b4de&skt=2025-08-23T09%3A34%3A56Z&ske=2025-08-23T10%3A35%3A43Z&sks=b&skv=2018-11-09&sig=zjhusUAmF%2FEe26O50uqVqMpJvlozISRJW9HLhHHThto%3D&jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmVsZWFzZS1hc3NldHMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwia2V5Ijoia2V5MSIsImV4cCI6MTc1NTk0MzM1OSwibmJmIjoxNzU1OTQzMDU5LCJwYXRoIjoicmVsZWFzZWFzc2V0cHJvZHVjdGlvbi5ibG9iLmNvcmUud2luZG93cy5uZXQifQ.ZMLgqpr9NVeFBqnjQLMQUpcFLei6Ib9QtBgb3gnFdl0&response-content-disposition=attachment%3B%20filename%3Dhubert-soft-0d54a1f4.pt&response-content-type=application%2Foctet-stream [following]\n",
            "--2025-08-23 09:57:39--  https://release-assets.githubusercontent.com/github-production-release-asset/417578841/6eaffd96-4bcb-4978-ac67-80857af26838?sp=r&sv=2018-11-09&sr=b&spr=https&se=2025-08-23T10%3A35%3A43Z&rscd=attachment%3B+filename%3Dhubert-soft-0d54a1f4.pt&rsct=application%2Foctet-stream&skoid=96c2d410-5711-43a1-aedd-ab1947aa7ab0&sktid=398a6654-997b-47e9-b12b-9515b896b4de&skt=2025-08-23T09%3A34%3A56Z&ske=2025-08-23T10%3A35%3A43Z&sks=b&skv=2018-11-09&sig=zjhusUAmF%2FEe26O50uqVqMpJvlozISRJW9HLhHHThto%3D&jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmVsZWFzZS1hc3NldHMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwia2V5Ijoia2V5MSIsImV4cCI6MTc1NTk0MzM1OSwibmJmIjoxNzU1OTQzMDU5LCJwYXRoIjoicmVsZWFzZWFzc2V0cHJvZHVjdGlvbi5ibG9iLmNvcmUud2luZG93cy5uZXQifQ.ZMLgqpr9NVeFBqnjQLMQUpcFLei6Ib9QtBgb3gnFdl0&response-content-disposition=attachment%3B%20filename%3Dhubert-soft-0d54a1f4.pt&response-content-type=application%2Foctet-stream\n",
            "Resolving release-assets.githubusercontent.com (release-assets.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to release-assets.githubusercontent.com (release-assets.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 378435957 (361M) [application/octet-stream]\n",
            "Saving to: ‘hubert/hubert-soft-0d54a1f4.pt’\n",
            "\n",
            "hubert-soft-0d54a1f 100%[===================>] 360.90M  44.1MB/s    in 7.0s    \n",
            "\n",
            "2025-08-23 09:57:46 (51.4 MB/s) - ‘hubert/hubert-soft-0d54a1f4.pt’ saved [378435957/378435957]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 数据集预处理"
      ],
      "metadata": {
        "id": "k1qadJBFehMo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 加载Google云端硬盘\n",
        "#@markdown 加载Google云端硬盘\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wmUkpUmfn_Hs",
        "outputId": "272e687b-dcab-4daa-bcad-fe6c22bf49de"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "该处理脚本可以一次性预处理多个说话人，并且生成多说话人filelists以及对应的配置文件\n",
        "\n",
        "只需要将你的数据集按照以下文件结构放到dataset_raw目录下\n",
        "\n",
        "\n",
        "```\n",
        "dataset_raw\n",
        "├───speaker0\n",
        "│   ├───xxx1-xxx1.wav\n",
        "│   ├───...\n",
        "│   └───Lxx-0xx8.wav\n",
        "└───speaker1\n",
        "    ├───xx2-0xxx2.wav\n",
        "    ├───...\n",
        "    └───xxx7-xxx007.wav\n",
        "\n",
        "```\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "kBlju6Q3lSM6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 从谷歌云盘加载打包好的数据集进行预处理\n",
        "#@markdown **sovits3.0的数据集不再需要特定的文件结构，将数据集的所有wav文件放在同一个文件夹下压缩为zip后上传至谷歌云盘即可，该处理脚本可以一次性预处理多个数据集，处理多个数据集时请依次解压每一个数据集**\n",
        "\n",
        "#@markdown 数据集名称（**人物的英文/拼音名**，与建数据文件夹时统一；不带zip。）\n",
        "DATASETNAME = \"dataset_raw\"  #@param {type:\"string\"}\n",
        "#@markdown 压缩包路径（谷歌盘路径，传到dataset的就不改这个，没有dataset文件夹就新建一个）\n",
        "ZIP_PATH = \"/content/drive/MyDrive/dataset/\"  #@param {type:\"string\"}\n",
        "ZIP_NAME = ZIP_PATH + DATASETNAME\n",
        "\n",
        "!unzip -d /content/so-vits-svc/dataset_raw {ZIP_NAME}.zip"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U05CXlAipvJR",
        "outputId": "fac9fabe-f138-4888-8709-90b9554fb5c6"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  /content/drive/MyDrive/dataset/dataset_raw.zip\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/\n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/config  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/description  \n",
            " extracting: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/FETCH_HEAD  \n",
            " extracting: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/HEAD  \n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/\n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/applypatch-msg.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/commit-msg.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/fsmonitor-watchman.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/post-update.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-applypatch.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-commit.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-merge-commit.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-push.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-rebase.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/pre-receive.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/prepare-commit-msg.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/push-to-checkout.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/sendemail-validate.sample  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/hooks/update.sample  \n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/info/\n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/info/exclude  \n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/objects/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/objects/info/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/objects/pack/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/refs/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/refs/heads/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/.git/refs/tags/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/\n",
            "   creating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/\n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0001.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0002.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0003.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0004.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0005.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0006.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0007.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0008.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0009.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0010.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0011.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0012.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0013.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0014.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0015.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0016.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0017.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0018.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0019.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0020.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0021.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0022.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0023.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0024.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0025.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0026.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0027.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0028.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0029.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0030.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0031.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0032.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0033.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0034.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0035.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0036.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0037.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0038.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0039.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0040.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0041.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0042.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0043.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0044.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0045.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0046.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0047.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0048.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0049.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0050.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0051.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0052.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0053.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0054.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0055.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0056.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0057.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0058.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0059.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0060.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0061.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0062.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0063.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0064.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0065.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0066.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0067.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0068.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0069.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0070.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0071.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0072.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0073.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0074.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0075.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0076.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0077.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0078.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0079.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0080.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0081.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0082.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0083.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0084.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0085.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0086.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0087.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0088.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0089.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0090.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0091.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0092.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0093.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0094.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0095.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0096.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0097.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0098.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0099.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0100.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0101.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0102.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0103.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0104.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0105.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0106.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0107.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0108.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0109.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0110.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0111.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0112.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0113.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0114.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0115.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0116.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0117.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0118.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0119.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0120.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0121.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0122.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0123.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0124.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0125.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0126.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0127.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0128.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0129.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0130.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0131.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0132.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0133.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0134.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0135.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0136.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0137.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0138.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0139.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0140.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0141.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0142.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0143.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0144.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0145.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0146.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0147.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0148.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0149.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0150.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0151.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0152.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0153.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0154.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0155.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0156.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0157.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0158.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0159.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0160.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0161.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0162.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0163.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0164.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0165.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0166.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0167.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0168.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0169.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0170.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0171.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0172.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0173.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0174.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0175.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0176.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0177.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0178.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0179.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0180.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0181.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0182.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0183.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0184.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0185.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0186.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0187.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0188.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0189.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0190.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0191.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0192.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0193.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0194.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0195.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0196.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0197.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0198.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0199.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0200.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0201.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0202.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0203.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0204.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0205.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0206.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0207.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0208.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0209.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0210.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0211.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0212.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0213.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0214.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0215.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0216.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0217.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0218.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0219.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0220.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0221.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0222.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0223.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0224.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0225.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0226.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0227.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0228.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0229.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0230.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0231.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0232.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0233.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0234.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0235.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0236.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0237.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0238.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0239.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0240.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0241.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0242.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0243.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0244.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0245.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0246.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0247.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0248.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0249.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0250.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0251.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0252.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0253.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0254.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0255.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0256.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0257.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0258.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0259.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0260.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0261.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0262.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0263.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0264.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0265.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0266.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0267.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0268.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0269.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0270.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0271.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0272.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0273.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0274.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0275.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0276.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0277.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0278.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0279.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0280.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0281.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0282.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0283.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0284.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0285.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0286.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0287.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0288.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0289.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0290.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0291.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0292.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0293.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0294.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0295.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0296.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0297.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0298.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0299.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0300.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0301.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0302.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0303.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0304.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0305.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0306.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0307.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0308.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0309.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0310.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0311.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0312.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0313.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0314.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0315.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0316.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0317.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0318.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0319.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0320.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0321.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0322.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0323.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0324.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0325.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0326.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0327.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0328.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0329.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0330.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0331.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0332.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0333.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0334.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0335.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0336.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0337.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0338.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0339.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0340.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0341.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0342.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0343.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0344.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0345.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0346.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0347.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0348.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0349.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0350.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0351.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0352.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0353.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0354.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0355.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0356.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0357.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0358.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0359.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0360.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0361.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0362.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0363.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0364.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0365.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0366.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0367.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0368.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0369.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0370.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0371.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0372.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0373.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0374.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0375.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0376.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0377.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0378.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0379.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0380.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0381.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0382.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0383.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0384.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0385.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0386.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0387.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0388.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0389.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0390.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0391.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0392.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0393.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0394.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0395.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0396.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0397.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0398.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0399.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0400.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0401.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0402.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0403.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0404.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0405.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0406.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0407.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0408.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0409.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0410.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0411.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0412.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0413.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0414.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0415.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0416.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0417.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0418.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0419.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0420.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0421.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0422.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0423.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0424.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0425.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0426.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0427.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0428.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0429.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0430.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0431.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0432.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0433.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0434.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0435.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0436.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0437.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0438.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0439.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0440.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0441.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0442.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0443.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0444.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0445.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0446.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0447.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0448.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0449.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0450.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0451.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0452.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0453.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0454.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0455.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0456.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0457.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0458.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0459.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0460.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0461.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0462.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0463.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0464.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0465.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0466.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0467.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0468.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0469.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0470.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0471.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0472.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0473.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0474.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0475.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0476.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0477.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0478.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0479.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0480.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0481.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0482.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0483.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0484.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0485.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0486.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0487.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0488.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0489.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0490.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0491.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0492.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0493.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0494.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0495.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0496.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0497.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0498.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0499.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0500.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0501.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0502.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0503.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0504.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0505.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0506.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0507.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0508.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0509.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0510.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0511.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0512.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0513.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0514.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0515.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0516.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0517.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0518.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0519.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0520.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0521.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0522.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0523.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0524.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0525.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0526.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0527.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0528.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0529.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0530.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0531.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0532.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0533.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0534.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0535.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0536.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0537.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0538.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0539.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0540.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0541.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0542.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0543.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0544.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0545.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0546.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0547.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0548.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0549.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0550.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0551.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0552.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0553.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0554.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0555.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0556.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0557.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0558.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0559.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0560.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0561.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0562.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0563.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0564.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0565.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0566.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0567.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0568.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0569.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0570.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0571.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0572.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0573.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0574.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0575.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0576.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0577.wav  \n",
            "  inflating: /content/so-vits-svc/dataset_raw/datat3/dataset_raw/me/speaker0/0578.wav  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create speaker0 directory\n",
        "!mkdir -p /content/so-vits-svc/dataset_raw/speaker0\n",
        "\n",
        "# Move all .wav files from anywhere inside dataset_raw into speaker0\n",
        "!find /content/so-vits-svc/dataset_raw -name \"*.wav\" -exec mv {} /content/so-vits-svc/dataset_raw/speaker0/ \\;\n",
        "\n",
        "# Delete any leftover empty folders inside dataset_raw\n",
        "!find /content/so-vits-svc/dataset_raw -type d -empty -not -path \"/content/so-vits-svc/dataset_raw/speaker0\" -delete\n",
        "\n",
        "# Check it worked\n",
        "!ls /content/so-vits-svc/dataset_raw/speaker0\n"
      ],
      "metadata": {
        "id": "-PBQ0j56CEsH",
        "outputId": "698e3097-0453-4e40-9260-f1acdcee1ff8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0001.wav  0074.wav  0147.wav  0220.wav\t0293.wav  0366.wav  0439.wav  0512.wav\n",
            "0002.wav  0075.wav  0148.wav  0221.wav\t0294.wav  0367.wav  0440.wav  0513.wav\n",
            "0003.wav  0076.wav  0149.wav  0222.wav\t0295.wav  0368.wav  0441.wav  0514.wav\n",
            "0004.wav  0077.wav  0150.wav  0223.wav\t0296.wav  0369.wav  0442.wav  0515.wav\n",
            "0005.wav  0078.wav  0151.wav  0224.wav\t0297.wav  0370.wav  0443.wav  0516.wav\n",
            "0006.wav  0079.wav  0152.wav  0225.wav\t0298.wav  0371.wav  0444.wav  0517.wav\n",
            "0007.wav  0080.wav  0153.wav  0226.wav\t0299.wav  0372.wav  0445.wav  0518.wav\n",
            "0008.wav  0081.wav  0154.wav  0227.wav\t0300.wav  0373.wav  0446.wav  0519.wav\n",
            "0009.wav  0082.wav  0155.wav  0228.wav\t0301.wav  0374.wav  0447.wav  0520.wav\n",
            "0010.wav  0083.wav  0156.wav  0229.wav\t0302.wav  0375.wav  0448.wav  0521.wav\n",
            "0011.wav  0084.wav  0157.wav  0230.wav\t0303.wav  0376.wav  0449.wav  0522.wav\n",
            "0012.wav  0085.wav  0158.wav  0231.wav\t0304.wav  0377.wav  0450.wav  0523.wav\n",
            "0013.wav  0086.wav  0159.wav  0232.wav\t0305.wav  0378.wav  0451.wav  0524.wav\n",
            "0014.wav  0087.wav  0160.wav  0233.wav\t0306.wav  0379.wav  0452.wav  0525.wav\n",
            "0015.wav  0088.wav  0161.wav  0234.wav\t0307.wav  0380.wav  0453.wav  0526.wav\n",
            "0016.wav  0089.wav  0162.wav  0235.wav\t0308.wav  0381.wav  0454.wav  0527.wav\n",
            "0017.wav  0090.wav  0163.wav  0236.wav\t0309.wav  0382.wav  0455.wav  0528.wav\n",
            "0018.wav  0091.wav  0164.wav  0237.wav\t0310.wav  0383.wav  0456.wav  0529.wav\n",
            "0019.wav  0092.wav  0165.wav  0238.wav\t0311.wav  0384.wav  0457.wav  0530.wav\n",
            "0020.wav  0093.wav  0166.wav  0239.wav\t0312.wav  0385.wav  0458.wav  0531.wav\n",
            "0021.wav  0094.wav  0167.wav  0240.wav\t0313.wav  0386.wav  0459.wav  0532.wav\n",
            "0022.wav  0095.wav  0168.wav  0241.wav\t0314.wav  0387.wav  0460.wav  0533.wav\n",
            "0023.wav  0096.wav  0169.wav  0242.wav\t0315.wav  0388.wav  0461.wav  0534.wav\n",
            "0024.wav  0097.wav  0170.wav  0243.wav\t0316.wav  0389.wav  0462.wav  0535.wav\n",
            "0025.wav  0098.wav  0171.wav  0244.wav\t0317.wav  0390.wav  0463.wav  0536.wav\n",
            "0026.wav  0099.wav  0172.wav  0245.wav\t0318.wav  0391.wav  0464.wav  0537.wav\n",
            "0027.wav  0100.wav  0173.wav  0246.wav\t0319.wav  0392.wav  0465.wav  0538.wav\n",
            "0028.wav  0101.wav  0174.wav  0247.wav\t0320.wav  0393.wav  0466.wav  0539.wav\n",
            "0029.wav  0102.wav  0175.wav  0248.wav\t0321.wav  0394.wav  0467.wav  0540.wav\n",
            "0030.wav  0103.wav  0176.wav  0249.wav\t0322.wav  0395.wav  0468.wav  0541.wav\n",
            "0031.wav  0104.wav  0177.wav  0250.wav\t0323.wav  0396.wav  0469.wav  0542.wav\n",
            "0032.wav  0105.wav  0178.wav  0251.wav\t0324.wav  0397.wav  0470.wav  0543.wav\n",
            "0033.wav  0106.wav  0179.wav  0252.wav\t0325.wav  0398.wav  0471.wav  0544.wav\n",
            "0034.wav  0107.wav  0180.wav  0253.wav\t0326.wav  0399.wav  0472.wav  0545.wav\n",
            "0035.wav  0108.wav  0181.wav  0254.wav\t0327.wav  0400.wav  0473.wav  0546.wav\n",
            "0036.wav  0109.wav  0182.wav  0255.wav\t0328.wav  0401.wav  0474.wav  0547.wav\n",
            "0037.wav  0110.wav  0183.wav  0256.wav\t0329.wav  0402.wav  0475.wav  0548.wav\n",
            "0038.wav  0111.wav  0184.wav  0257.wav\t0330.wav  0403.wav  0476.wav  0549.wav\n",
            "0039.wav  0112.wav  0185.wav  0258.wav\t0331.wav  0404.wav  0477.wav  0550.wav\n",
            "0040.wav  0113.wav  0186.wav  0259.wav\t0332.wav  0405.wav  0478.wav  0551.wav\n",
            "0041.wav  0114.wav  0187.wav  0260.wav\t0333.wav  0406.wav  0479.wav  0552.wav\n",
            "0042.wav  0115.wav  0188.wav  0261.wav\t0334.wav  0407.wav  0480.wav  0553.wav\n",
            "0043.wav  0116.wav  0189.wav  0262.wav\t0335.wav  0408.wav  0481.wav  0554.wav\n",
            "0044.wav  0117.wav  0190.wav  0263.wav\t0336.wav  0409.wav  0482.wav  0555.wav\n",
            "0045.wav  0118.wav  0191.wav  0264.wav\t0337.wav  0410.wav  0483.wav  0556.wav\n",
            "0046.wav  0119.wav  0192.wav  0265.wav\t0338.wav  0411.wav  0484.wav  0557.wav\n",
            "0047.wav  0120.wav  0193.wav  0266.wav\t0339.wav  0412.wav  0485.wav  0558.wav\n",
            "0048.wav  0121.wav  0194.wav  0267.wav\t0340.wav  0413.wav  0486.wav  0559.wav\n",
            "0049.wav  0122.wav  0195.wav  0268.wav\t0341.wav  0414.wav  0487.wav  0560.wav\n",
            "0050.wav  0123.wav  0196.wav  0269.wav\t0342.wav  0415.wav  0488.wav  0561.wav\n",
            "0051.wav  0124.wav  0197.wav  0270.wav\t0343.wav  0416.wav  0489.wav  0562.wav\n",
            "0052.wav  0125.wav  0198.wav  0271.wav\t0344.wav  0417.wav  0490.wav  0563.wav\n",
            "0053.wav  0126.wav  0199.wav  0272.wav\t0345.wav  0418.wav  0491.wav  0564.wav\n",
            "0054.wav  0127.wav  0200.wav  0273.wav\t0346.wav  0419.wav  0492.wav  0565.wav\n",
            "0055.wav  0128.wav  0201.wav  0274.wav\t0347.wav  0420.wav  0493.wav  0566.wav\n",
            "0056.wav  0129.wav  0202.wav  0275.wav\t0348.wav  0421.wav  0494.wav  0567.wav\n",
            "0057.wav  0130.wav  0203.wav  0276.wav\t0349.wav  0422.wav  0495.wav  0568.wav\n",
            "0058.wav  0131.wav  0204.wav  0277.wav\t0350.wav  0423.wav  0496.wav  0569.wav\n",
            "0059.wav  0132.wav  0205.wav  0278.wav\t0351.wav  0424.wav  0497.wav  0570.wav\n",
            "0060.wav  0133.wav  0206.wav  0279.wav\t0352.wav  0425.wav  0498.wav  0571.wav\n",
            "0061.wav  0134.wav  0207.wav  0280.wav\t0353.wav  0426.wav  0499.wav  0572.wav\n",
            "0062.wav  0135.wav  0208.wav  0281.wav\t0354.wav  0427.wav  0500.wav  0573.wav\n",
            "0063.wav  0136.wav  0209.wav  0282.wav\t0355.wav  0428.wav  0501.wav  0574.wav\n",
            "0064.wav  0137.wav  0210.wav  0283.wav\t0356.wav  0429.wav  0502.wav  0575.wav\n",
            "0065.wav  0138.wav  0211.wav  0284.wav\t0357.wav  0430.wav  0503.wav  0576.wav\n",
            "0066.wav  0139.wav  0212.wav  0285.wav\t0358.wav  0431.wav  0504.wav  0577.wav\n",
            "0067.wav  0140.wav  0213.wav  0286.wav\t0359.wav  0432.wav  0505.wav  0578.wav\n",
            "0068.wav  0141.wav  0214.wav  0287.wav\t0360.wav  0433.wav  0506.wav\n",
            "0069.wav  0142.wav  0215.wav  0288.wav\t0361.wav  0434.wav  0507.wav\n",
            "0070.wav  0143.wav  0216.wav  0289.wav\t0362.wav  0435.wav  0508.wav\n",
            "0071.wav  0144.wav  0217.wav  0290.wav\t0363.wav  0436.wav  0509.wav\n",
            "0072.wav  0145.wav  0218.wav  0291.wav\t0364.wav  0437.wav  0510.wav\n",
            "0073.wav  0146.wav  0219.wav  0292.wav\t0365.wav  0438.wav  0511.wav\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 重采样到32k/48k，根据你选择克隆的github仓库分支自动确定\n",
        "!python resample.py"
      ],
      "metadata": {
        "id": "_ThKTzYs5CfL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c3d50d22-c9f2-4f2a-e163-c8a688e54ff2"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "./dataset_raw/speaker0\n",
            "578it [00:22, 26.12it/s] \n",
            "./dataset_raw/datat3\n",
            "0it [00:00, ?it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 划分训练集 生成配置文件\n",
        "!python preprocess_flist_config.py"
      ],
      "metadata": {
        "id": "svITReeL5N8K",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c44445a2-3f81-4630-d24d-03df9bd38ea7"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\r  0% 0/1 [00:00<?, ?it/s]\r100% 1/1 [00:00<00:00, 615.27it/s]\n",
            "Writing ./filelists/train.txt\n",
            "\r  0% 0/574 [00:00<?, ?it/s]\r100% 574/574 [00:00<00:00, 1295764.53it/s]\n",
            "Writing ./filelists/val.txt\n",
            "\r  0% 0/2 [00:00<?, ?it/s]\r100% 2/2 [00:00<00:00, 78398.21it/s]\n",
            "Writing ./filelists/test.txt\n",
            "\r  0% 0/2 [00:00<?, ?it/s]\r100% 2/2 [00:00<00:00, 84733.41it/s]\n",
            "Writing configs/config.json\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 生成hubert和f0\n",
        "!python preprocess_hubert_f0.py"
      ],
      "metadata": {
        "id": "xHUXMi836DMe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b3271f59-670c-43cf-bd18-a5163961892f"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/so-vits-svc/utils.py:145: SyntaxWarning: invalid escape sequence '\\d'\n",
            "  name_key = (lambda _f: int(re.compile('._(\\d+)\\.pth').match(_f).group(1)))\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "Loading hubert for content...\n",
            "/usr/local/lib/python3.12/dist-packages/torch/nn/utils/weight_norm.py:144: FutureWarning: `torch.nn.utils.weight_norm` is deprecated in favor of `torch.nn.utils.parametrizations.weight_norm`.\n",
            "  WeightNorm.apply(module, name, dim)\n",
            "Loaded hubert.\n",
            "  0% 0/578 [00:00<?, ?it/s]dataset/32k/speaker0/0329.wav\n",
            "  0% 1/578 [00:01<13:58,  1.45s/it]dataset/32k/speaker0/0370.wav\n",
            "  0% 2/578 [00:01<08:11,  1.17it/s]dataset/32k/speaker0/0349.wav\n",
            "  1% 3/578 [00:02<06:20,  1.51it/s]dataset/32k/speaker0/0405.wav\n",
            "  1% 4/578 [00:02<05:20,  1.79it/s]dataset/32k/speaker0/0144.wav\n",
            "  1% 5/578 [00:03<04:55,  1.94it/s]dataset/32k/speaker0/0220.wav\n",
            "  1% 6/578 [00:03<04:25,  2.16it/s]dataset/32k/speaker0/0441.wav\n",
            "  1% 7/578 [00:03<03:53,  2.45it/s]dataset/32k/speaker0/0159.wav\n",
            "  1% 8/578 [00:04<03:29,  2.72it/s]dataset/32k/speaker0/0505.wav\n",
            "  2% 9/578 [00:04<03:05,  3.07it/s]dataset/32k/speaker0/0341.wav\n",
            "  2% 10/578 [00:04<02:58,  3.18it/s]dataset/32k/speaker0/0350.wav\n",
            "  2% 11/578 [00:04<02:56,  3.22it/s]dataset/32k/speaker0/0430.wav\n",
            "  2% 12/578 [00:05<02:51,  3.30it/s]dataset/32k/speaker0/0470.wav\n",
            "  2% 13/578 [00:05<02:53,  3.25it/s]dataset/32k/speaker0/0223.wav\n",
            "  2% 14/578 [00:05<02:58,  3.15it/s]dataset/32k/speaker0/0070.wav\n",
            "  3% 15/578 [00:06<02:53,  3.25it/s]dataset/32k/speaker0/0279.wav\n",
            "  3% 16/578 [00:06<02:52,  3.26it/s]dataset/32k/speaker0/0301.wav\n",
            "  3% 17/578 [00:06<02:50,  3.29it/s]dataset/32k/speaker0/0256.wav\n",
            "  3% 18/578 [00:07<02:47,  3.34it/s]dataset/32k/speaker0/0079.wav\n",
            "dataset/32k/speaker0/0297.wav\n",
            "  3% 20/578 [00:07<02:19,  4.01it/s]dataset/32k/speaker0/0567.wav\n",
            "  4% 21/578 [00:07<02:23,  3.88it/s]dataset/32k/speaker0/0249.wav\n",
            "  4% 22/578 [00:08<02:30,  3.70it/s]dataset/32k/speaker0/0511.wav\n",
            "  4% 23/578 [00:08<02:31,  3.65it/s]dataset/32k/speaker0/0039.wav\n",
            "  4% 24/578 [00:08<02:31,  3.66it/s]dataset/32k/speaker0/0097.wav\n",
            "  4% 25/578 [00:08<02:19,  3.97it/s]dataset/32k/speaker0/0543.wav\n",
            "dataset/32k/speaker0/0457.wav\n",
            "  5% 27/578 [00:09<01:53,  4.84it/s]dataset/32k/speaker0/0088.wav\n",
            "  5% 28/578 [00:09<02:06,  4.35it/s]dataset/32k/speaker0/0327.wav\n",
            "  5% 29/578 [00:09<02:15,  4.05it/s]dataset/32k/speaker0/0157.wav\n",
            "  5% 30/578 [00:09<02:24,  3.80it/s]dataset/32k/speaker0/0308.wav\n",
            "  5% 31/578 [00:10<02:28,  3.69it/s]dataset/32k/speaker0/0480.wav\n",
            "  6% 32/578 [00:10<02:34,  3.54it/s]dataset/32k/speaker0/0044.wav\n",
            "  6% 33/578 [00:10<02:32,  3.57it/s]dataset/32k/speaker0/0374.wav\n",
            "  6% 34/578 [00:11<02:33,  3.54it/s]dataset/32k/speaker0/0218.wav\n",
            "  6% 35/578 [00:11<02:37,  3.46it/s]dataset/32k/speaker0/0323.wav\n",
            "  6% 36/578 [00:11<02:38,  3.41it/s]dataset/32k/speaker0/0069.wav\n",
            "  6% 37/578 [00:12<02:40,  3.36it/s]dataset/32k/speaker0/0291.wav\n",
            "  7% 38/578 [00:12<02:40,  3.36it/s]dataset/32k/speaker0/0302.wav\n",
            "  7% 39/578 [00:12<02:39,  3.37it/s]dataset/32k/speaker0/0490.wav\n",
            "  7% 40/578 [00:12<02:40,  3.36it/s]dataset/32k/speaker0/0100.wav\n",
            "  7% 41/578 [00:13<02:40,  3.35it/s]dataset/32k/speaker0/0277.wav\n",
            "  7% 42/578 [00:13<03:04,  2.90it/s]dataset/32k/speaker0/0443.wav\n",
            "  7% 43/578 [00:14<03:21,  2.66it/s]dataset/32k/speaker0/0523.wav\n",
            "  8% 44/578 [00:14<03:28,  2.56it/s]dataset/32k/speaker0/0068.wav\n",
            "  8% 45/578 [00:15<03:35,  2.47it/s]dataset/32k/speaker0/0111.wav\n",
            "  8% 46/578 [00:15<03:43,  2.38it/s]dataset/32k/speaker0/0239.wav\n",
            "  8% 47/578 [00:15<03:45,  2.35it/s]dataset/32k/speaker0/0076.wav\n",
            "  8% 48/578 [00:16<03:47,  2.33it/s]dataset/32k/speaker0/0048.wav\n",
            "  8% 49/578 [00:16<03:41,  2.39it/s]dataset/32k/speaker0/0469.wav\n",
            "  9% 50/578 [00:17<03:22,  2.60it/s]dataset/32k/speaker0/0124.wav\n",
            "  9% 51/578 [00:17<03:09,  2.79it/s]dataset/32k/speaker0/0514.wav\n",
            "  9% 52/578 [00:17<02:58,  2.94it/s]dataset/32k/speaker0/0082.wav\n",
            "  9% 53/578 [00:17<02:53,  3.02it/s]dataset/32k/speaker0/0092.wav\n",
            "  9% 54/578 [00:18<02:51,  3.05it/s]dataset/32k/speaker0/0042.wav\n",
            " 10% 55/578 [00:18<02:42,  3.21it/s]dataset/32k/speaker0/0055.wav\n",
            " 10% 56/578 [00:18<02:36,  3.33it/s]dataset/32k/speaker0/0190.wav\n",
            " 10% 57/578 [00:19<02:35,  3.36it/s]dataset/32k/speaker0/0152.wav\n",
            " 10% 58/578 [00:19<02:37,  3.30it/s]dataset/32k/speaker0/0161.wav\n",
            " 10% 59/578 [00:19<02:34,  3.36it/s]dataset/32k/speaker0/0085.wav\n",
            " 10% 60/578 [00:20<02:35,  3.32it/s]dataset/32k/speaker0/0244.wav\n",
            " 11% 61/578 [00:20<02:34,  3.35it/s]dataset/32k/speaker0/0191.wav\n",
            " 11% 62/578 [00:20<02:34,  3.33it/s]dataset/32k/speaker0/0539.wav\n",
            " 11% 63/578 [00:20<02:34,  3.33it/s]dataset/32k/speaker0/0281.wav\n",
            " 11% 64/578 [00:21<02:36,  3.29it/s]dataset/32k/speaker0/0525.wav\n",
            " 11% 65/578 [00:21<02:42,  3.16it/s]dataset/32k/speaker0/0136.wav\n",
            " 11% 66/578 [00:21<02:36,  3.27it/s]dataset/32k/speaker0/0445.wav\n",
            " 12% 67/578 [00:22<02:33,  3.33it/s]dataset/32k/speaker0/0131.wav\n",
            " 12% 68/578 [00:22<02:29,  3.40it/s]dataset/32k/speaker0/0240.wav\n",
            " 12% 69/578 [00:22<02:28,  3.44it/s]dataset/32k/speaker0/0062.wav\n",
            " 12% 70/578 [00:22<02:25,  3.49it/s]dataset/32k/speaker0/0361.wav\n",
            " 12% 71/578 [00:23<02:25,  3.48it/s]dataset/32k/speaker0/0568.wav\n",
            " 12% 72/578 [00:23<02:27,  3.42it/s]dataset/32k/speaker0/0414.wav\n",
            " 13% 73/578 [00:23<02:22,  3.55it/s]dataset/32k/speaker0/0576.wav\n",
            " 13% 74/578 [00:24<02:24,  3.48it/s]dataset/32k/speaker0/0532.wav\n",
            " 13% 75/578 [00:24<02:23,  3.49it/s]dataset/32k/speaker0/0512.wav\n",
            " 13% 76/578 [00:24<02:26,  3.43it/s]dataset/32k/speaker0/0409.wav\n",
            " 13% 77/578 [00:24<02:20,  3.57it/s]dataset/32k/speaker0/0091.wav\n",
            " 13% 78/578 [00:25<02:25,  3.45it/s]dataset/32k/speaker0/0205.wav\n",
            " 14% 79/578 [00:25<02:28,  3.37it/s]dataset/32k/speaker0/0427.wav\n",
            " 14% 80/578 [00:25<02:26,  3.41it/s]dataset/32k/speaker0/0276.wav\n",
            " 14% 81/578 [00:26<02:31,  3.27it/s]dataset/32k/speaker0/0149.wav\n",
            " 14% 82/578 [00:26<02:29,  3.32it/s]dataset/32k/speaker0/0559.wav\n",
            " 14% 83/578 [00:26<02:33,  3.23it/s]dataset/32k/speaker0/0212.wav\n",
            " 15% 84/578 [00:27<02:55,  2.81it/s]dataset/32k/speaker0/0482.wav\n",
            " 15% 85/578 [00:27<03:11,  2.57it/s]dataset/32k/speaker0/0551.wav\n",
            " 15% 86/578 [00:28<03:21,  2.44it/s]dataset/32k/speaker0/0265.wav\n",
            " 15% 87/578 [00:28<03:31,  2.33it/s]dataset/32k/speaker0/0234.wav\n",
            " 15% 88/578 [00:29<03:29,  2.34it/s]dataset/32k/speaker0/0077.wav\n",
            " 15% 89/578 [00:29<03:29,  2.34it/s]dataset/32k/speaker0/0036.wav\n",
            " 16% 90/578 [00:29<03:27,  2.35it/s]dataset/32k/speaker0/0362.wav\n",
            " 16% 91/578 [00:30<02:48,  2.89it/s]dataset/32k/speaker0/0309.wav\n",
            " 16% 92/578 [00:30<02:40,  3.02it/s]dataset/32k/speaker0/0527.wav\n",
            " 16% 93/578 [00:30<02:35,  3.12it/s]dataset/32k/speaker0/0164.wav\n",
            " 16% 94/578 [00:31<02:31,  3.19it/s]dataset/32k/speaker0/0035.wav\n",
            " 16% 95/578 [00:31<02:27,  3.27it/s]dataset/32k/speaker0/0486.wav\n",
            " 17% 96/578 [00:31<02:21,  3.41it/s]dataset/32k/speaker0/0282.wav\n",
            " 17% 97/578 [00:32<02:58,  2.70it/s]dataset/32k/speaker0/0461.wav\n",
            " 17% 98/578 [00:32<02:51,  2.80it/s]dataset/32k/speaker0/0203.wav\n",
            " 17% 99/578 [00:33<03:21,  2.38it/s]dataset/32k/speaker0/0198.wav\n",
            " 17% 100/578 [00:33<03:02,  2.62it/s]dataset/32k/speaker0/0204.wav\n",
            " 17% 101/578 [00:33<03:20,  2.38it/s]dataset/32k/speaker0/0163.wav\n",
            " 18% 102/578 [00:34<03:01,  2.62it/s]dataset/32k/speaker0/0130.wav\n",
            " 18% 103/578 [00:34<02:47,  2.84it/s]dataset/32k/speaker0/0084.wav\n",
            " 18% 104/578 [00:34<02:39,  2.98it/s]dataset/32k/speaker0/0263.wav\n",
            " 18% 105/578 [00:35<02:35,  3.04it/s]dataset/32k/speaker0/0506.wav\n",
            " 18% 106/578 [00:35<02:31,  3.11it/s]dataset/32k/speaker0/0115.wav\n",
            " 19% 107/578 [00:35<02:26,  3.21it/s]dataset/32k/speaker0/0120.wav\n",
            " 19% 108/578 [00:35<02:22,  3.30it/s]dataset/32k/speaker0/0432.wav\n",
            " 19% 109/578 [00:36<02:23,  3.26it/s]dataset/32k/speaker0/0117.wav\n",
            " 19% 110/578 [00:36<02:20,  3.34it/s]dataset/32k/speaker0/0268.wav\n",
            " 19% 111/578 [00:36<02:20,  3.33it/s]dataset/32k/speaker0/0339.wav\n",
            " 19% 112/578 [00:37<02:23,  3.26it/s]dataset/32k/speaker0/0456.wav\n",
            " 20% 113/578 [00:37<02:19,  3.34it/s]dataset/32k/speaker0/0298.wav\n",
            " 20% 114/578 [00:37<02:16,  3.40it/s]dataset/32k/speaker0/0396.wav\n",
            " 20% 115/578 [00:37<02:10,  3.55it/s]dataset/32k/speaker0/0324.wav\n",
            " 20% 116/578 [00:38<02:14,  3.44it/s]dataset/32k/speaker0/0463.wav\n",
            " 20% 117/578 [00:38<02:15,  3.39it/s]dataset/32k/speaker0/0575.wav\n",
            " 20% 118/578 [00:38<02:15,  3.40it/s]dataset/32k/speaker0/0248.wav\n",
            " 21% 119/578 [00:39<02:13,  3.44it/s]dataset/32k/speaker0/0526.wav\n",
            " 21% 120/578 [00:39<02:12,  3.46it/s]dataset/32k/speaker0/0178.wav\n",
            " 21% 121/578 [00:39<02:11,  3.46it/s]dataset/32k/speaker0/0054.wav\n",
            " 21% 122/578 [00:39<02:08,  3.55it/s]dataset/32k/speaker0/0436.wav\n",
            " 21% 123/578 [00:40<02:41,  2.82it/s]dataset/32k/speaker0/0315.wav\n",
            " 21% 124/578 [00:41<03:07,  2.42it/s]dataset/32k/speaker0/0522.wav\n",
            " 22% 125/578 [00:41<03:26,  2.19it/s]dataset/32k/speaker0/0307.wav\n",
            " 22% 126/578 [00:42<03:38,  2.07it/s]dataset/32k/speaker0/0017.wav\n",
            " 22% 127/578 [00:42<03:33,  2.11it/s]dataset/32k/speaker0/0316.wav\n",
            " 22% 128/578 [00:43<03:28,  2.15it/s]dataset/32k/speaker0/0134.wav\n",
            " 22% 129/578 [00:43<03:14,  2.31it/s]dataset/32k/speaker0/0051.wav\n",
            " 22% 130/578 [00:43<02:51,  2.61it/s]dataset/32k/speaker0/0133.wav\n",
            " 23% 131/578 [00:43<02:37,  2.84it/s]dataset/32k/speaker0/0112.wav\n",
            " 23% 132/578 [00:44<02:27,  3.03it/s]dataset/32k/speaker0/0176.wav\n",
            " 23% 133/578 [00:44<02:24,  3.09it/s]dataset/32k/speaker0/0155.wav\n",
            " 23% 134/578 [00:44<02:17,  3.23it/s]dataset/32k/speaker0/0217.wav\n",
            " 23% 135/578 [00:45<02:16,  3.24it/s]dataset/32k/speaker0/0465.wav\n",
            " 24% 136/578 [00:45<02:19,  3.17it/s]dataset/32k/speaker0/0128.wav\n",
            " 24% 137/578 [00:45<02:16,  3.24it/s]dataset/32k/speaker0/0306.wav\n",
            " 24% 138/578 [00:46<02:14,  3.27it/s]dataset/32k/speaker0/0460.wav\n",
            " 24% 139/578 [00:46<02:13,  3.28it/s]dataset/32k/speaker0/0110.wav\n",
            " 24% 140/578 [00:46<02:15,  3.23it/s]dataset/32k/speaker0/0348.wav\n",
            " 24% 141/578 [00:46<02:11,  3.32it/s]dataset/32k/speaker0/0572.wav\n",
            " 25% 142/578 [00:47<02:10,  3.34it/s]dataset/32k/speaker0/0202.wav\n",
            " 25% 143/578 [00:47<02:11,  3.30it/s]dataset/32k/speaker0/0103.wav\n",
            " 25% 144/578 [00:47<02:09,  3.36it/s]dataset/32k/speaker0/0105.wav\n",
            " 25% 145/578 [00:48<02:07,  3.41it/s]dataset/32k/speaker0/0357.wav\n",
            " 25% 146/578 [00:48<02:05,  3.44it/s]dataset/32k/speaker0/0415.wav\n",
            " 25% 147/578 [00:48<02:03,  3.49it/s]dataset/32k/speaker0/0060.wav\n",
            " 26% 148/578 [00:48<02:02,  3.50it/s]dataset/32k/speaker0/0106.wav\n",
            " 26% 149/578 [00:49<02:02,  3.50it/s]dataset/32k/speaker0/0353.wav\n",
            " 26% 150/578 [00:49<02:02,  3.50it/s]dataset/32k/speaker0/0252.wav\n",
            " 26% 151/578 [00:49<02:01,  3.53it/s]dataset/32k/speaker0/0462.wav\n",
            " 26% 152/578 [00:50<02:06,  3.36it/s]dataset/32k/speaker0/0471.wav\n",
            " 26% 153/578 [00:50<02:09,  3.28it/s]dataset/32k/speaker0/0206.wav\n",
            " 27% 154/578 [00:50<02:09,  3.28it/s]dataset/32k/speaker0/0114.wav\n",
            " 27% 155/578 [00:51<02:06,  3.33it/s]dataset/32k/speaker0/0189.wav\n",
            " 27% 156/578 [00:51<02:04,  3.40it/s]dataset/32k/speaker0/0330.wav\n",
            " 27% 157/578 [00:51<02:06,  3.33it/s]dataset/32k/speaker0/0498.wav\n",
            " 27% 158/578 [00:51<02:00,  3.47it/s]dataset/32k/speaker0/0502.wav\n",
            " 28% 159/578 [00:52<01:59,  3.50it/s]dataset/32k/speaker0/0074.wav\n",
            " 28% 160/578 [00:52<01:57,  3.56it/s]dataset/32k/speaker0/0090.wav\n",
            " 28% 161/578 [00:52<02:03,  3.38it/s]dataset/32k/speaker0/0043.wav\n",
            " 28% 162/578 [00:53<01:59,  3.48it/s]dataset/32k/speaker0/0404.wav\n",
            " 28% 163/578 [00:53<02:06,  3.29it/s]dataset/32k/speaker0/0391.wav\n",
            " 28% 164/578 [00:53<02:16,  3.04it/s]dataset/32k/speaker0/0540.wav\n",
            " 29% 165/578 [00:54<02:41,  2.55it/s]dataset/32k/speaker0/0275.wav\n",
            " 29% 166/578 [00:54<03:05,  2.22it/s]dataset/32k/speaker0/0574.wav\n",
            " 29% 167/578 [00:55<03:14,  2.12it/s]dataset/32k/speaker0/0434.wav\n",
            " 29% 168/578 [00:55<03:22,  2.02it/s]dataset/32k/speaker0/0448.wav\n",
            " 29% 169/578 [00:56<03:25,  1.99it/s]dataset/32k/speaker0/0172.wav\n",
            " 29% 170/578 [00:56<03:07,  2.17it/s]dataset/32k/speaker0/0304.wav\n",
            " 30% 171/578 [00:57<02:58,  2.28it/s]dataset/32k/speaker0/0375.wav\n",
            " 30% 172/578 [00:57<02:47,  2.43it/s]dataset/32k/speaker0/0125.wav\n",
            " 30% 173/578 [00:57<02:38,  2.55it/s]dataset/32k/speaker0/0075.wav\n",
            " 30% 174/578 [00:58<02:33,  2.63it/s]dataset/32k/speaker0/0442.wav\n",
            " 30% 175/578 [00:58<02:28,  2.71it/s]dataset/32k/speaker0/0534.wav\n",
            " 30% 176/578 [00:58<02:19,  2.87it/s]dataset/32k/speaker0/0537.wav\n",
            " 31% 177/578 [00:59<02:14,  2.99it/s]dataset/32k/speaker0/0325.wav\n",
            " 31% 178/578 [00:59<02:10,  3.07it/s]dataset/32k/speaker0/0287.wav\n",
            " 31% 179/578 [00:59<02:07,  3.13it/s]dataset/32k/speaker0/0004.wav\n",
            " 31% 180/578 [01:00<02:07,  3.13it/s]dataset/32k/speaker0/0560.wav\n",
            " 31% 181/578 [01:00<02:04,  3.18it/s]dataset/32k/speaker0/0201.wav\n",
            " 31% 182/578 [01:00<02:01,  3.26it/s]dataset/32k/speaker0/0071.wav\n",
            " 32% 183/578 [01:01<01:58,  3.33it/s]dataset/32k/speaker0/0378.wav\n",
            " 32% 184/578 [01:01<02:04,  3.15it/s]dataset/32k/speaker0/0170.wav\n",
            " 32% 185/578 [01:01<02:09,  3.04it/s]dataset/32k/speaker0/0413.wav\n",
            " 32% 186/578 [01:02<02:09,  3.03it/s]dataset/32k/speaker0/0340.wav\n",
            " 32% 187/578 [01:02<02:13,  2.92it/s]dataset/32k/speaker0/0166.wav\n",
            " 33% 188/578 [01:02<02:16,  2.87it/s]dataset/32k/speaker0/0403.wav\n",
            " 33% 189/578 [01:03<02:17,  2.83it/s]dataset/32k/speaker0/0193.wav\n",
            " 33% 190/578 [01:03<02:22,  2.73it/s]dataset/32k/speaker0/0156.wav\n",
            " 33% 191/578 [01:03<02:26,  2.64it/s]dataset/32k/speaker0/0284.wav\n",
            " 33% 192/578 [01:04<02:30,  2.56it/s]dataset/32k/speaker0/0259.wav\n",
            " 33% 193/578 [01:04<02:52,  2.23it/s]dataset/32k/speaker0/0394.wav\n",
            " 34% 194/578 [01:05<02:59,  2.14it/s]dataset/32k/speaker0/0257.wav\n",
            " 34% 195/578 [01:06<03:09,  2.02it/s]dataset/32k/speaker0/0174.wav\n",
            " 34% 196/578 [01:06<03:17,  1.94it/s]dataset/32k/speaker0/0290.wav\n",
            " 34% 197/578 [01:06<02:57,  2.15it/s]dataset/32k/speaker0/0104.wav\n",
            " 34% 198/578 [01:07<03:18,  1.91it/s]dataset/32k/speaker0/0358.wav\n",
            " 34% 199/578 [01:08<03:26,  1.83it/s]dataset/32k/speaker0/0570.wav\n",
            " 35% 200/578 [01:08<03:31,  1.78it/s]dataset/32k/speaker0/0182.wav\n",
            " 35% 201/578 [01:09<03:36,  1.74it/s]dataset/32k/speaker0/0508.wav\n",
            " 35% 202/578 [01:10<03:36,  1.74it/s]dataset/32k/speaker0/0151.wav\n",
            " 35% 203/578 [01:10<03:32,  1.77it/s]dataset/32k/speaker0/0321.wav\n",
            " 35% 204/578 [01:11<03:17,  1.89it/s]dataset/32k/speaker0/0510.wav\n",
            " 35% 205/578 [01:11<02:59,  2.07it/s]dataset/32k/speaker0/0552.wav\n",
            " 36% 206/578 [01:11<02:49,  2.19it/s]dataset/32k/speaker0/0022.wav\n",
            " 36% 207/578 [01:12<02:39,  2.32it/s]dataset/32k/speaker0/0479.wav\n",
            " 36% 208/578 [01:12<02:33,  2.41it/s]dataset/32k/speaker0/0483.wav\n",
            " 36% 209/578 [01:12<02:31,  2.44it/s]dataset/32k/speaker0/0547.wav\n",
            " 36% 210/578 [01:13<02:19,  2.63it/s]dataset/32k/speaker0/0467.wav\n",
            " 37% 211/578 [01:13<02:12,  2.76it/s]dataset/32k/speaker0/0476.wav\n",
            " 37% 212/578 [01:13<02:08,  2.84it/s]dataset/32k/speaker0/0521.wav\n",
            " 37% 213/578 [01:14<02:05,  2.91it/s]dataset/32k/speaker0/0420.wav\n",
            " 37% 214/578 [01:14<01:57,  3.09it/s]dataset/32k/speaker0/0407.wav\n",
            " 37% 215/578 [01:14<01:51,  3.25it/s]dataset/32k/speaker0/0196.wav\n",
            " 37% 216/578 [01:15<01:53,  3.18it/s]dataset/32k/speaker0/0487.wav\n",
            "dataset/32k/speaker0/0126.wav\n",
            " 38% 218/578 [01:15<01:36,  3.72it/s]dataset/32k/speaker0/0057.wav\n",
            " 38% 219/578 [01:15<01:45,  3.40it/s]dataset/32k/speaker0/0186.wav\n",
            " 38% 220/578 [01:16<01:53,  3.15it/s]dataset/32k/speaker0/0192.wav\n",
            " 38% 221/578 [01:16<01:58,  3.02it/s]dataset/32k/speaker0/0031.wav\n",
            " 38% 222/578 [01:17<02:01,  2.92it/s]dataset/32k/speaker0/0399.wav\n",
            " 39% 223/578 [01:17<02:01,  2.92it/s]dataset/32k/speaker0/0140.wav\n",
            " 39% 224/578 [01:17<02:02,  2.89it/s]dataset/32k/speaker0/0303.wav\n",
            " 39% 225/578 [01:18<02:05,  2.82it/s]dataset/32k/speaker0/0154.wav\n",
            " 39% 226/578 [01:18<02:04,  2.83it/s]dataset/32k/speaker0/0197.wav\n",
            " 39% 227/578 [01:18<02:04,  2.81it/s]dataset/32k/speaker0/0364.wav\n",
            " 39% 228/578 [01:19<02:11,  2.66it/s]dataset/32k/speaker0/0520.wav\n",
            " 40% 229/578 [01:19<02:10,  2.67it/s]dataset/32k/speaker0/0065.wav\n",
            " 40% 230/578 [01:19<02:08,  2.71it/s]dataset/32k/speaker0/0500.wav\n",
            " 40% 231/578 [01:20<02:08,  2.70it/s]dataset/32k/speaker0/0453.wav\n",
            " 40% 232/578 [01:20<02:05,  2.75it/s]dataset/32k/speaker0/0179.wav\n",
            " 40% 233/578 [01:21<02:21,  2.44it/s]dataset/32k/speaker0/0384.wav\n",
            " 40% 234/578 [01:21<02:40,  2.14it/s]dataset/32k/speaker0/0274.wav\n",
            " 41% 235/578 [01:22<02:51,  2.00it/s]dataset/32k/speaker0/0458.wav\n",
            "dataset/32k/speaker0/0337.wav\n",
            " 41% 237/578 [01:22<02:16,  2.49it/s]dataset/32k/speaker0/0113.wav\n",
            " 41% 238/578 [01:23<02:29,  2.27it/s]dataset/32k/speaker0/0162.wav\n",
            " 41% 239/578 [01:24<02:39,  2.13it/s]dataset/32k/speaker0/0272.wav\n",
            " 42% 240/578 [01:24<02:33,  2.20it/s]dataset/32k/speaker0/0269.wav\n",
            " 42% 241/578 [01:24<02:26,  2.31it/s]dataset/32k/speaker0/0495.wav\n",
            " 42% 242/578 [01:25<02:18,  2.42it/s]dataset/32k/speaker0/0503.wav\n",
            " 42% 243/578 [01:25<02:17,  2.44it/s]dataset/32k/speaker0/0342.wav\n",
            " 42% 244/578 [01:25<02:14,  2.49it/s]dataset/32k/speaker0/0258.wav\n",
            " 42% 245/578 [01:26<02:10,  2.54it/s]dataset/32k/speaker0/0440.wav\n",
            " 43% 246/578 [01:26<02:07,  2.61it/s]dataset/32k/speaker0/0369.wav\n",
            " 43% 247/578 [01:27<02:03,  2.69it/s]dataset/32k/speaker0/0395.wav\n",
            " 43% 248/578 [01:27<01:59,  2.76it/s]dataset/32k/speaker0/0326.wav\n",
            " 43% 249/578 [01:27<02:01,  2.70it/s]dataset/32k/speaker0/0455.wav\n",
            " 43% 250/578 [01:28<02:00,  2.72it/s]dataset/32k/speaker0/0032.wav\n",
            " 43% 251/578 [01:28<02:01,  2.70it/s]dataset/32k/speaker0/0007.wav\n",
            " 44% 252/578 [01:28<01:59,  2.72it/s]dataset/32k/speaker0/0417.wav\n",
            " 44% 253/578 [01:29<01:55,  2.81it/s]dataset/32k/speaker0/0387.wav\n",
            " 44% 254/578 [01:29<01:57,  2.75it/s]dataset/32k/speaker0/0318.wav\n",
            " 44% 255/578 [01:29<01:57,  2.74it/s]dataset/32k/speaker0/0472.wav\n",
            " 44% 256/578 [01:30<01:58,  2.72it/s]dataset/32k/speaker0/0389.wav\n",
            " 44% 257/578 [01:30<01:55,  2.79it/s]dataset/32k/speaker0/0393.wav\n",
            " 45% 258/578 [01:30<01:51,  2.86it/s]dataset/32k/speaker0/0210.wav\n",
            " 45% 259/578 [01:31<01:51,  2.85it/s]dataset/32k/speaker0/0270.wav\n",
            " 45% 260/578 [01:31<01:55,  2.76it/s]dataset/32k/speaker0/0346.wav\n",
            " 45% 261/578 [01:32<01:53,  2.79it/s]dataset/32k/speaker0/0289.wav\n",
            " 45% 262/578 [01:32<01:56,  2.72it/s]dataset/32k/speaker0/0177.wav\n",
            " 46% 263/578 [01:32<01:57,  2.69it/s]dataset/32k/speaker0/0242.wav\n",
            " 46% 264/578 [01:33<01:56,  2.70it/s]dataset/32k/speaker0/0438.wav\n",
            " 46% 265/578 [01:33<01:34,  3.31it/s]dataset/32k/speaker0/0484.wav\n",
            " 46% 266/578 [01:33<01:42,  3.05it/s]dataset/32k/speaker0/0183.wav\n",
            " 46% 267/578 [01:34<01:46,  2.93it/s]dataset/32k/speaker0/0530.wav\n",
            " 46% 268/578 [01:34<02:05,  2.46it/s]dataset/32k/speaker0/0548.wav\n",
            " 47% 269/578 [01:35<02:18,  2.23it/s]dataset/32k/speaker0/0477.wav\n",
            " 47% 270/578 [01:35<02:31,  2.03it/s]dataset/32k/speaker0/0216.wav\n",
            " 47% 271/578 [01:36<02:39,  1.93it/s]dataset/32k/speaker0/0251.wav\n",
            " 47% 272/578 [01:36<02:41,  1.90it/s]dataset/32k/speaker0/0538.wav\n",
            " 47% 273/578 [01:37<02:40,  1.90it/s]dataset/32k/speaker0/0033.wav\n",
            " 47% 274/578 [01:37<02:27,  2.06it/s]dataset/32k/speaker0/0168.wav\n",
            " 48% 275/578 [01:38<02:15,  2.24it/s]dataset/32k/speaker0/0563.wav\n",
            " 48% 276/578 [01:38<02:08,  2.36it/s]dataset/32k/speaker0/0146.wav\n",
            " 48% 277/578 [01:38<02:03,  2.45it/s]dataset/32k/speaker0/0320.wav\n",
            " 48% 278/578 [01:39<01:58,  2.54it/s]dataset/32k/speaker0/0165.wav\n",
            " 48% 279/578 [01:39<01:53,  2.64it/s]dataset/32k/speaker0/0411.wav\n",
            " 48% 280/578 [01:40<01:49,  2.72it/s]dataset/32k/speaker0/0233.wav\n",
            " 49% 281/578 [01:40<01:49,  2.71it/s]dataset/32k/speaker0/0221.wav\n",
            " 49% 282/578 [01:40<01:50,  2.69it/s]dataset/32k/speaker0/0380.wav\n",
            " 49% 283/578 [01:41<01:48,  2.71it/s]dataset/32k/speaker0/0332.wav\n",
            " 49% 284/578 [01:41<01:48,  2.72it/s]dataset/32k/speaker0/0247.wav\n",
            " 49% 285/578 [01:41<01:45,  2.78it/s]dataset/32k/speaker0/0132.wav\n",
            " 49% 286/578 [01:42<01:46,  2.73it/s]dataset/32k/speaker0/0386.wav\n",
            " 50% 287/578 [01:42<01:46,  2.72it/s]dataset/32k/speaker0/0180.wav\n",
            "dataset/32k/speaker0/0018.wav\n",
            " 50% 289/578 [01:42<01:23,  3.46it/s]dataset/32k/speaker0/0347.wav\n",
            " 50% 290/578 [01:43<01:28,  3.25it/s]dataset/32k/speaker0/0410.wav\n",
            " 50% 291/578 [01:43<01:29,  3.21it/s]dataset/32k/speaker0/0292.wav\n",
            " 51% 292/578 [01:44<01:34,  3.04it/s]dataset/32k/speaker0/0171.wav\n",
            " 51% 293/578 [01:44<01:37,  2.93it/s]dataset/32k/speaker0/0293.wav\n",
            " 51% 294/578 [01:44<01:39,  2.87it/s]dataset/32k/speaker0/0555.wav\n",
            " 51% 295/578 [01:45<01:43,  2.73it/s]dataset/32k/speaker0/0029.wav\n",
            " 51% 296/578 [01:45<01:44,  2.71it/s]dataset/32k/speaker0/0026.wav\n",
            " 51% 297/578 [01:45<01:42,  2.75it/s]dataset/32k/speaker0/0078.wav\n",
            " 52% 298/578 [01:46<01:41,  2.76it/s]dataset/32k/speaker0/0550.wav\n",
            " 52% 299/578 [01:46<01:42,  2.73it/s]dataset/32k/speaker0/0019.wav\n",
            " 52% 300/578 [01:47<01:42,  2.71it/s]dataset/32k/speaker0/0565.wav\n",
            " 52% 301/578 [01:47<01:43,  2.69it/s]dataset/32k/speaker0/0024.wav\n",
            " 52% 302/578 [01:47<01:33,  2.95it/s]dataset/32k/speaker0/0528.wav\n",
            " 52% 303/578 [01:48<01:54,  2.40it/s]dataset/32k/speaker0/0294.wav\n",
            " 53% 304/578 [01:48<02:08,  2.13it/s]dataset/32k/speaker0/0187.wav\n",
            " 53% 305/578 [01:49<02:16,  2.00it/s]dataset/32k/speaker0/0072.wav\n",
            " 53% 306/578 [01:49<02:20,  1.94it/s]dataset/32k/speaker0/0368.wav\n",
            " 53% 307/578 [01:50<02:21,  1.92it/s]dataset/32k/speaker0/0531.wav\n",
            " 53% 308/578 [01:50<02:11,  2.05it/s]dataset/32k/speaker0/0450.wav\n",
            " 53% 309/578 [01:51<02:00,  2.24it/s]dataset/32k/speaker0/0142.wav\n",
            " 54% 310/578 [01:51<01:53,  2.36it/s]dataset/32k/speaker0/0402.wav\n",
            " 54% 311/578 [01:52<01:48,  2.47it/s]dataset/32k/speaker0/0232.wav\n",
            " 54% 312/578 [01:52<01:44,  2.55it/s]dataset/32k/speaker0/0101.wav\n",
            "dataset/32k/speaker0/0253.wav\n",
            " 54% 314/578 [01:52<01:23,  3.16it/s]dataset/32k/speaker0/0280.wav\n",
            " 54% 315/578 [01:53<01:26,  3.04it/s]dataset/32k/speaker0/0546.wav\n",
            " 55% 316/578 [01:53<01:30,  2.89it/s]dataset/32k/speaker0/0138.wav\n",
            " 55% 317/578 [01:53<01:31,  2.84it/s]dataset/32k/speaker0/0366.wav\n",
            " 55% 318/578 [01:54<01:31,  2.83it/s]dataset/32k/speaker0/0317.wav\n",
            " 55% 319/578 [01:54<01:34,  2.73it/s]dataset/32k/speaker0/0331.wav\n",
            " 55% 320/578 [01:55<01:34,  2.73it/s]dataset/32k/speaker0/0109.wav\n",
            " 56% 321/578 [01:55<01:34,  2.71it/s]dataset/32k/speaker0/0561.wav\n",
            " 56% 322/578 [01:55<01:35,  2.68it/s]dataset/32k/speaker0/0049.wav\n",
            " 56% 323/578 [01:56<01:33,  2.73it/s]dataset/32k/speaker0/0123.wav\n",
            " 56% 324/578 [01:56<01:32,  2.75it/s]dataset/32k/speaker0/0311.wav\n",
            " 56% 325/578 [01:56<01:32,  2.73it/s]dataset/32k/speaker0/0278.wav\n",
            " 56% 326/578 [01:57<01:33,  2.69it/s]dataset/32k/speaker0/0545.wav\n",
            " 57% 327/578 [01:57<01:34,  2.67it/s]dataset/32k/speaker0/0336.wav\n",
            " 57% 328/578 [01:58<01:33,  2.67it/s]dataset/32k/speaker0/0009.wav\n",
            " 57% 329/578 [01:58<01:32,  2.69it/s]dataset/32k/speaker0/0428.wav\n",
            " 57% 330/578 [01:58<01:32,  2.67it/s]dataset/32k/speaker0/0446.wav\n",
            " 57% 331/578 [01:59<01:31,  2.71it/s]dataset/32k/speaker0/0359.wav\n",
            " 57% 332/578 [01:59<01:30,  2.71it/s]dataset/32k/speaker0/0254.wav\n",
            " 58% 333/578 [01:59<01:31,  2.67it/s]dataset/32k/speaker0/0107.wav\n",
            " 58% 334/578 [02:00<01:30,  2.69it/s]dataset/32k/speaker0/0020.wav\n",
            " 58% 335/578 [02:00<01:29,  2.72it/s]dataset/32k/speaker0/0488.wav\n",
            " 58% 336/578 [02:01<01:42,  2.37it/s]dataset/32k/speaker0/0352.wav\n",
            " 58% 337/578 [02:01<01:50,  2.17it/s]dataset/32k/speaker0/0005.wav\n",
            " 58% 338/578 [02:02<01:57,  2.04it/s]dataset/32k/speaker0/0173.wav\n",
            " 59% 339/578 [02:02<02:01,  1.97it/s]dataset/32k/speaker0/0261.wav\n",
            " 59% 340/578 [02:03<02:06,  1.89it/s]dataset/32k/speaker0/0058.wav\n",
            " 59% 341/578 [02:03<02:06,  1.87it/s]dataset/32k/speaker0/0398.wav\n",
            " 59% 342/578 [02:04<01:52,  2.10it/s]dataset/32k/speaker0/0439.wav\n",
            " 59% 343/578 [02:04<01:44,  2.26it/s]dataset/32k/speaker0/0169.wav\n",
            " 60% 344/578 [02:05<01:39,  2.36it/s]dataset/32k/speaker0/0401.wav\n",
            " 60% 345/578 [02:05<01:32,  2.52it/s]dataset/32k/speaker0/0485.wav\n",
            " 60% 346/578 [02:05<01:32,  2.51it/s]dataset/32k/speaker0/0037.wav\n",
            " 60% 347/578 [02:06<01:30,  2.56it/s]dataset/32k/speaker0/0153.wav\n",
            " 60% 348/578 [02:06<01:28,  2.61it/s]dataset/32k/speaker0/0424.wav\n",
            " 60% 349/578 [02:06<01:25,  2.66it/s]dataset/32k/speaker0/0046.wav\n",
            " 61% 350/578 [02:07<01:24,  2.69it/s]dataset/32k/speaker0/0351.wav\n",
            " 61% 351/578 [02:07<01:24,  2.70it/s]dataset/32k/speaker0/0569.wav\n",
            " 61% 352/578 [02:07<01:23,  2.69it/s]dataset/32k/speaker0/0141.wav\n",
            " 61% 353/578 [02:08<01:22,  2.73it/s]dataset/32k/speaker0/0025.wav\n",
            " 61% 354/578 [02:08<01:21,  2.76it/s]dataset/32k/speaker0/0214.wav\n",
            " 61% 355/578 [02:09<01:20,  2.76it/s]dataset/32k/speaker0/0558.wav\n",
            " 62% 356/578 [02:09<01:20,  2.75it/s]dataset/32k/speaker0/0475.wav\n",
            " 62% 357/578 [02:09<01:20,  2.73it/s]dataset/32k/speaker0/0089.wav\n",
            " 62% 358/578 [02:10<01:21,  2.69it/s]dataset/32k/speaker0/0529.wav\n",
            " 62% 359/578 [02:10<01:21,  2.68it/s]dataset/32k/speaker0/0129.wav\n",
            " 62% 360/578 [02:10<01:20,  2.70it/s]dataset/32k/speaker0/0412.wav\n",
            " 62% 361/578 [02:11<01:18,  2.77it/s]dataset/32k/speaker0/0073.wav\n",
            " 63% 362/578 [02:11<01:17,  2.78it/s]dataset/32k/speaker0/0416.wav\n",
            " 63% 363/578 [02:11<01:15,  2.86it/s]dataset/32k/speaker0/0312.wav\n",
            " 63% 364/578 [02:12<01:16,  2.78it/s]dataset/32k/speaker0/0243.wav\n",
            " 63% 365/578 [02:12<01:16,  2.78it/s]dataset/32k/speaker0/0419.wav\n",
            " 63% 366/578 [02:13<01:14,  2.86it/s]dataset/32k/speaker0/0118.wav\n",
            " 63% 367/578 [02:13<01:15,  2.79it/s]dataset/32k/speaker0/0507.wav\n",
            " 64% 368/578 [02:13<01:16,  2.76it/s]dataset/32k/speaker0/0226.wav\n",
            " 64% 369/578 [02:14<01:22,  2.53it/s]dataset/32k/speaker0/0288.wav\n",
            " 64% 370/578 [02:14<01:34,  2.20it/s]dataset/32k/speaker0/0229.wav\n",
            " 64% 371/578 [02:15<01:39,  2.07it/s]dataset/32k/speaker0/0459.wav\n",
            " 64% 372/578 [02:15<01:44,  1.98it/s]dataset/32k/speaker0/0447.wav\n",
            " 65% 373/578 [02:16<01:45,  1.94it/s]dataset/32k/speaker0/0334.wav\n",
            " 65% 374/578 [02:17<01:47,  1.90it/s]dataset/32k/speaker0/0047.wav\n",
            " 65% 375/578 [02:17<01:40,  2.01it/s]dataset/32k/speaker0/0418.wav\n",
            " 65% 376/578 [02:17<01:30,  2.23it/s]dataset/32k/speaker0/0494.wav\n",
            " 65% 377/578 [02:18<01:25,  2.35it/s]dataset/32k/speaker0/0145.wav\n",
            " 65% 378/578 [02:18<01:21,  2.44it/s]dataset/32k/speaker0/0143.wav\n",
            " 66% 379/578 [02:18<01:18,  2.54it/s]dataset/32k/speaker0/0524.wav\n",
            " 66% 380/578 [02:19<01:16,  2.59it/s]dataset/32k/speaker0/0478.wav\n",
            " 66% 381/578 [02:19<01:17,  2.55it/s]dataset/32k/speaker0/0148.wav\n",
            " 66% 382/578 [02:20<01:15,  2.61it/s]dataset/32k/speaker0/0535.wav\n",
            " 66% 383/578 [02:20<01:14,  2.61it/s]dataset/32k/speaker0/0011.wav\n",
            " 66% 384/578 [02:20<01:14,  2.60it/s]dataset/32k/speaker0/0360.wav\n",
            " 67% 385/578 [02:21<01:12,  2.66it/s]dataset/32k/speaker0/0553.wav\n",
            " 67% 386/578 [02:21<01:12,  2.65it/s]dataset/32k/speaker0/0264.wav\n",
            " 67% 387/578 [02:21<01:11,  2.68it/s]dataset/32k/speaker0/0322.wav\n",
            "dataset/32k/speaker0/0209.wav\n",
            " 67% 389/578 [02:22<00:57,  3.31it/s]dataset/32k/speaker0/0266.wav\n",
            " 67% 390/578 [02:22<01:00,  3.10it/s]dataset/32k/speaker0/0388.wav\n",
            "dataset/32k/speaker0/0127.wav\n",
            " 68% 392/578 [02:23<00:51,  3.64it/s]dataset/32k/speaker0/0509.wav\n",
            " 68% 393/578 [02:23<00:54,  3.41it/s]dataset/32k/speaker0/0573.wav\n",
            " 68% 394/578 [02:23<00:57,  3.20it/s]dataset/32k/speaker0/0492.wav\n",
            " 68% 395/578 [02:24<01:00,  3.05it/s]dataset/32k/speaker0/0299.wav\n",
            " 69% 396/578 [02:24<01:02,  2.93it/s]dataset/32k/speaker0/0195.wav\n",
            " 69% 397/578 [02:25<01:04,  2.81it/s]dataset/32k/speaker0/0236.wav\n",
            " 69% 398/578 [02:25<01:03,  2.82it/s]dataset/32k/speaker0/0002.wav\n",
            " 69% 399/578 [02:25<01:05,  2.73it/s]dataset/32k/speaker0/0066.wav\n",
            " 69% 400/578 [02:26<01:04,  2.76it/s]dataset/32k/speaker0/0319.wav\n",
            " 69% 401/578 [02:26<01:04,  2.72it/s]dataset/32k/speaker0/0468.wav\n",
            " 70% 402/578 [02:26<01:06,  2.66it/s]dataset/32k/speaker0/0227.wav\n",
            " 70% 403/578 [02:27<01:05,  2.69it/s]dataset/32k/speaker0/0408.wav\n",
            " 70% 404/578 [02:27<01:12,  2.41it/s]dataset/32k/speaker0/0343.wav\n",
            " 70% 405/578 [02:28<01:19,  2.19it/s]dataset/32k/speaker0/0383.wav\n",
            " 70% 406/578 [02:28<01:24,  2.04it/s]dataset/32k/speaker0/0516.wav\n",
            " 70% 407/578 [02:29<01:28,  1.94it/s]dataset/32k/speaker0/0199.wav\n",
            " 71% 408/578 [02:30<01:31,  1.85it/s]dataset/32k/speaker0/0053.wav\n",
            " 71% 409/578 [02:30<01:30,  1.88it/s]dataset/32k/speaker0/0030.wav\n",
            " 71% 410/578 [02:30<01:20,  2.09it/s]dataset/32k/speaker0/0557.wav\n",
            " 71% 411/578 [02:31<01:14,  2.23it/s]dataset/32k/speaker0/0533.wav\n",
            " 71% 412/578 [02:31<01:10,  2.35it/s]dataset/32k/speaker0/0093.wav\n",
            " 71% 413/578 [02:32<01:08,  2.39it/s]dataset/32k/speaker0/0087.wav\n",
            " 72% 414/578 [02:32<01:06,  2.46it/s]dataset/32k/speaker0/0238.wav\n",
            " 72% 415/578 [02:32<01:03,  2.55it/s]dataset/32k/speaker0/0056.wav\n",
            " 72% 416/578 [02:33<01:02,  2.59it/s]dataset/32k/speaker0/0001.wav\n",
            " 72% 417/578 [02:33<01:00,  2.67it/s]dataset/32k/speaker0/0515.wav\n",
            " 72% 418/578 [02:33<01:00,  2.65it/s]dataset/32k/speaker0/0119.wav\n",
            " 72% 419/578 [02:34<00:59,  2.67it/s]dataset/32k/speaker0/0464.wav\n",
            " 73% 420/578 [02:34<00:59,  2.64it/s]dataset/32k/speaker0/0271.wav\n",
            " 73% 421/578 [02:35<00:58,  2.66it/s]dataset/32k/speaker0/0188.wav\n",
            " 73% 422/578 [02:35<00:59,  2.64it/s]dataset/32k/speaker0/0081.wav\n",
            " 73% 423/578 [02:35<00:58,  2.63it/s]dataset/32k/speaker0/0313.wav\n",
            " 73% 424/578 [02:36<00:58,  2.62it/s]dataset/32k/speaker0/0536.wav\n",
            " 74% 425/578 [02:36<00:58,  2.62it/s]dataset/32k/speaker0/0021.wav\n",
            " 74% 426/578 [02:36<00:57,  2.65it/s]dataset/32k/speaker0/0241.wav\n",
            " 74% 427/578 [02:37<00:57,  2.63it/s]dataset/32k/speaker0/0310.wav\n",
            " 74% 428/578 [02:37<00:56,  2.66it/s]dataset/32k/speaker0/0185.wav\n",
            " 74% 429/578 [02:38<00:55,  2.69it/s]dataset/32k/speaker0/0137.wav\n",
            " 74% 430/578 [02:38<00:55,  2.68it/s]dataset/32k/speaker0/0426.wav\n",
            " 75% 431/578 [02:38<00:54,  2.70it/s]dataset/32k/speaker0/0094.wav\n",
            " 75% 432/578 [02:39<00:54,  2.67it/s]dataset/32k/speaker0/0116.wav\n",
            " 75% 433/578 [02:39<00:54,  2.67it/s]dataset/32k/speaker0/0496.wav\n",
            " 75% 434/578 [02:39<00:53,  2.71it/s]dataset/32k/speaker0/0473.wav\n",
            " 75% 435/578 [02:40<00:52,  2.70it/s]dataset/32k/speaker0/0549.wav\n",
            " 75% 436/578 [02:40<00:56,  2.53it/s]dataset/32k/speaker0/0286.wav\n",
            " 76% 437/578 [02:41<01:04,  2.18it/s]dataset/32k/speaker0/0333.wav\n",
            " 76% 438/578 [02:41<01:08,  2.05it/s]dataset/32k/speaker0/0355.wav\n",
            " 76% 439/578 [02:42<01:10,  1.97it/s]dataset/32k/speaker0/0006.wav\n",
            " 76% 440/578 [02:43<01:12,  1.91it/s]dataset/32k/speaker0/0542.wav\n",
            " 76% 441/578 [02:43<01:14,  1.85it/s]dataset/32k/speaker0/0444.wav\n",
            " 76% 442/578 [02:43<01:06,  2.06it/s]dataset/32k/speaker0/0367.wav\n",
            " 77% 443/578 [02:44<01:00,  2.23it/s]dataset/32k/speaker0/0371.wav\n",
            " 77% 444/578 [02:44<00:56,  2.36it/s]dataset/32k/speaker0/0015.wav\n",
            " 77% 445/578 [02:45<00:54,  2.45it/s]dataset/32k/speaker0/0063.wav\n",
            " 77% 446/578 [02:45<00:52,  2.52it/s]dataset/32k/speaker0/0040.wav\n",
            " 77% 447/578 [02:45<00:51,  2.54it/s]dataset/32k/speaker0/0041.wav\n",
            "dataset/32k/speaker0/0314.wav\n",
            " 78% 449/578 [02:46<00:40,  3.18it/s]dataset/32k/speaker0/0571.wav\n",
            " 78% 450/578 [02:46<00:42,  3.00it/s]dataset/32k/speaker0/0245.wav\n",
            " 78% 451/578 [02:47<00:43,  2.94it/s]dataset/32k/speaker0/0122.wav\n",
            " 78% 452/578 [02:47<00:43,  2.90it/s]dataset/32k/speaker0/0262.wav\n",
            " 78% 453/578 [02:47<00:45,  2.78it/s]dataset/32k/speaker0/0012.wav\n",
            " 79% 454/578 [02:48<00:45,  2.75it/s]dataset/32k/speaker0/0200.wav\n",
            " 79% 455/578 [02:48<00:37,  3.28it/s]dataset/32k/speaker0/0504.wav\n",
            " 79% 456/578 [02:48<00:39,  3.10it/s]dataset/32k/speaker0/0554.wav\n",
            " 79% 457/578 [02:49<00:40,  2.96it/s]dataset/32k/speaker0/0027.wav\n",
            " 79% 458/578 [02:49<00:41,  2.90it/s]dataset/32k/speaker0/0147.wav\n",
            " 79% 459/578 [02:49<00:42,  2.78it/s]dataset/32k/speaker0/0096.wav\n",
            " 80% 460/578 [02:50<00:43,  2.74it/s]dataset/32k/speaker0/0010.wav\n",
            " 80% 461/578 [02:50<00:43,  2.68it/s]dataset/32k/speaker0/0230.wav\n",
            " 80% 462/578 [02:50<00:43,  2.69it/s]dataset/32k/speaker0/0086.wav\n",
            " 80% 463/578 [02:51<00:43,  2.64it/s]dataset/32k/speaker0/0429.wav\n",
            " 80% 464/578 [02:51<00:42,  2.66it/s]dataset/32k/speaker0/0235.wav\n",
            " 80% 465/578 [02:52<00:42,  2.64it/s]dataset/32k/speaker0/0158.wav\n",
            " 81% 466/578 [02:52<00:42,  2.65it/s]dataset/32k/speaker0/0423.wav\n",
            " 81% 467/578 [02:52<00:41,  2.69it/s]dataset/32k/speaker0/0061.wav\n",
            " 81% 468/578 [02:53<00:40,  2.74it/s]dataset/32k/speaker0/0435.wav\n",
            " 81% 469/578 [02:53<00:40,  2.72it/s]dataset/32k/speaker0/0517.wav\n",
            " 81% 470/578 [02:54<00:45,  2.36it/s]dataset/32k/speaker0/0300.wav\n",
            " 81% 471/578 [02:54<00:50,  2.14it/s]dataset/32k/speaker0/0451.wav\n",
            " 82% 472/578 [02:55<00:52,  2.02it/s]dataset/32k/speaker0/0335.wav\n",
            " 82% 473/578 [02:55<00:54,  1.93it/s]dataset/32k/speaker0/0175.wav\n",
            " 82% 474/578 [02:56<00:55,  1.89it/s]dataset/32k/speaker0/0541.wav\n",
            " 82% 475/578 [02:56<00:55,  1.87it/s]dataset/32k/speaker0/0246.wav\n",
            " 82% 476/578 [02:57<00:49,  2.06it/s]dataset/32k/speaker0/0400.wav\n",
            " 83% 477/578 [02:57<00:44,  2.26it/s]dataset/32k/speaker0/0228.wav\n",
            " 83% 478/578 [02:58<00:42,  2.36it/s]dataset/32k/speaker0/0376.wav\n",
            " 83% 479/578 [02:58<00:40,  2.44it/s]dataset/32k/speaker0/0045.wav\n",
            " 83% 480/578 [02:58<00:38,  2.57it/s]dataset/32k/speaker0/0564.wav\n",
            " 83% 481/578 [02:59<00:37,  2.60it/s]dataset/32k/speaker0/0211.wav\n",
            " 83% 482/578 [02:59<00:35,  2.68it/s]dataset/32k/speaker0/0422.wav\n",
            "dataset/32k/speaker0/0215.wav\n",
            " 84% 484/578 [02:59<00:27,  3.39it/s]dataset/32k/speaker0/0067.wav\n",
            " 84% 485/578 [03:00<00:28,  3.21it/s]dataset/32k/speaker0/0474.wav\n",
            " 84% 486/578 [03:00<00:30,  3.01it/s]dataset/32k/speaker0/0406.wav\n",
            " 84% 487/578 [03:00<00:30,  3.02it/s]dataset/32k/speaker0/0377.wav\n",
            " 84% 488/578 [03:01<00:30,  2.92it/s]dataset/32k/speaker0/0345.wav\n",
            " 85% 489/578 [03:01<00:31,  2.86it/s]dataset/32k/speaker0/0184.wav\n",
            " 85% 490/578 [03:02<00:31,  2.77it/s]dataset/32k/speaker0/0102.wav\n",
            " 85% 491/578 [03:02<00:31,  2.73it/s]dataset/32k/speaker0/0373.wav\n",
            " 85% 492/578 [03:02<00:31,  2.72it/s]dataset/32k/speaker0/0160.wav\n",
            " 85% 493/578 [03:03<00:31,  2.71it/s]dataset/32k/speaker0/0296.wav\n",
            " 85% 494/578 [03:03<00:32,  2.62it/s]dataset/32k/speaker0/0577.wav\n",
            " 86% 495/578 [03:03<00:31,  2.61it/s]dataset/32k/speaker0/0544.wav\n",
            " 86% 496/578 [03:04<00:31,  2.58it/s]dataset/32k/speaker0/0497.wav\n",
            " 86% 497/578 [03:04<00:30,  2.65it/s]dataset/32k/speaker0/0139.wav\n",
            " 86% 498/578 [03:05<00:29,  2.68it/s]dataset/32k/speaker0/0354.wav\n",
            " 86% 499/578 [03:05<00:29,  2.67it/s]dataset/32k/speaker0/0080.wav\n",
            " 87% 500/578 [03:05<00:29,  2.68it/s]dataset/32k/speaker0/0425.wav\n",
            " 87% 501/578 [03:06<00:28,  2.71it/s]dataset/32k/speaker0/0452.wav\n",
            " 87% 502/578 [03:06<00:28,  2.70it/s]dataset/32k/speaker0/0562.wav\n",
            " 87% 503/578 [03:06<00:28,  2.61it/s]dataset/32k/speaker0/0083.wav\n",
            " 87% 504/578 [03:07<00:33,  2.24it/s]dataset/32k/speaker0/0181.wav\n",
            " 87% 505/578 [03:08<00:35,  2.04it/s]dataset/32k/speaker0/0397.wav\n",
            " 88% 506/578 [03:08<00:35,  2.02it/s]dataset/32k/speaker0/0454.wav\n",
            " 88% 507/578 [03:09<00:36,  1.95it/s]dataset/32k/speaker0/0231.wav\n",
            " 88% 508/578 [03:09<00:37,  1.86it/s]dataset/32k/speaker0/0135.wav\n",
            " 88% 509/578 [03:10<00:34,  1.99it/s]dataset/32k/speaker0/0219.wav\n",
            " 88% 510/578 [03:10<00:31,  2.13it/s]dataset/32k/speaker0/0392.wav\n",
            " 88% 511/578 [03:10<00:28,  2.31it/s]dataset/32k/speaker0/0237.wav\n",
            " 89% 512/578 [03:11<00:27,  2.43it/s]dataset/32k/speaker0/0328.wav\n",
            " 89% 513/578 [03:11<00:26,  2.49it/s]dataset/32k/speaker0/0167.wav\n",
            " 89% 514/578 [03:12<00:24,  2.60it/s]dataset/32k/speaker0/0338.wav\n",
            " 89% 515/578 [03:12<00:23,  2.65it/s]dataset/32k/speaker0/0013.wav\n",
            " 89% 516/578 [03:12<00:23,  2.63it/s]dataset/32k/speaker0/0449.wav\n",
            " 89% 517/578 [03:13<00:22,  2.69it/s]dataset/32k/speaker0/0250.wav\n",
            " 90% 518/578 [03:13<00:22,  2.73it/s]dataset/32k/speaker0/0382.wav\n",
            " 90% 519/578 [03:13<00:22,  2.68it/s]dataset/32k/speaker0/0499.wav\n",
            " 90% 520/578 [03:14<00:21,  2.70it/s]dataset/32k/speaker0/0421.wav\n",
            " 90% 521/578 [03:14<00:20,  2.80it/s]dataset/32k/speaker0/0466.wav\n",
            " 90% 522/578 [03:15<00:21,  2.66it/s]dataset/32k/speaker0/0023.wav\n",
            " 90% 523/578 [03:15<00:20,  2.68it/s]dataset/32k/speaker0/0050.wav\n",
            " 91% 524/578 [03:15<00:19,  2.72it/s]dataset/32k/speaker0/0305.wav\n",
            " 91% 525/578 [03:16<00:19,  2.70it/s]dataset/32k/speaker0/0295.wav\n",
            " 91% 526/578 [03:16<00:19,  2.70it/s]dataset/32k/speaker0/0255.wav\n",
            " 91% 527/578 [03:16<00:15,  3.23it/s]dataset/32k/speaker0/0385.wav\n",
            " 91% 528/578 [03:17<00:16,  3.04it/s]dataset/32k/speaker0/0208.wav\n",
            " 92% 529/578 [03:17<00:16,  2.94it/s]dataset/32k/speaker0/0431.wav\n",
            " 92% 530/578 [03:17<00:16,  2.87it/s]dataset/32k/speaker0/0052.wav\n",
            " 92% 531/578 [03:18<00:16,  2.81it/s]dataset/32k/speaker0/0285.wav\n",
            " 92% 532/578 [03:18<00:16,  2.78it/s]dataset/32k/speaker0/0213.wav\n",
            " 92% 533/578 [03:18<00:16,  2.75it/s]dataset/32k/speaker0/0518.wav\n",
            " 92% 534/578 [03:19<00:16,  2.73it/s]dataset/32k/speaker0/0433.wav\n",
            " 93% 535/578 [03:19<00:15,  2.76it/s]dataset/32k/speaker0/0003.wav\n",
            " 93% 536/578 [03:19<00:15,  2.70it/s]dataset/32k/speaker0/0034.wav\n",
            " 93% 537/578 [03:20<00:17,  2.38it/s]dataset/32k/speaker0/0150.wav\n",
            " 93% 538/578 [03:21<00:18,  2.19it/s]dataset/32k/speaker0/0016.wav\n",
            " 93% 539/578 [03:21<00:18,  2.10it/s]dataset/32k/speaker0/0064.wav\n",
            " 93% 540/578 [03:22<00:18,  2.00it/s]dataset/32k/speaker0/0437.wav\n",
            " 94% 541/578 [03:22<00:19,  1.92it/s]dataset/32k/speaker0/0038.wav\n",
            " 94% 542/578 [03:23<00:19,  1.86it/s]dataset/32k/speaker0/0273.wav\n",
            " 94% 543/578 [03:23<00:17,  2.05it/s]dataset/32k/speaker0/0224.wav\n",
            " 94% 544/578 [03:23<00:13,  2.50it/s]dataset/32k/speaker0/0014.wav\n",
            " 94% 545/578 [03:24<00:12,  2.56it/s]dataset/32k/speaker0/0493.wav\n",
            " 94% 546/578 [03:24<00:12,  2.65it/s]dataset/32k/speaker0/0121.wav\n",
            " 95% 547/578 [03:24<00:11,  2.67it/s]dataset/32k/speaker0/0491.wav\n",
            " 95% 548/578 [03:25<00:11,  2.60it/s]dataset/32k/speaker0/0098.wav\n",
            " 95% 549/578 [03:25<00:09,  3.02it/s]dataset/32k/speaker0/0578.wav\n",
            " 95% 550/578 [03:25<00:09,  2.91it/s]dataset/32k/speaker0/0381.wav\n",
            " 95% 551/578 [03:26<00:09,  2.78it/s]dataset/32k/speaker0/0556.wav\n",
            " 96% 552/578 [03:26<00:09,  2.73it/s]dataset/32k/speaker0/0481.wav\n",
            " 96% 553/578 [03:27<00:09,  2.65it/s]dataset/32k/speaker0/0283.wav\n",
            " 96% 554/578 [03:27<00:09,  2.62it/s]dataset/32k/speaker0/0344.wav\n",
            " 96% 555/578 [03:27<00:08,  2.64it/s]dataset/32k/speaker0/0356.wav\n",
            " 96% 556/578 [03:28<00:08,  2.66it/s]dataset/32k/speaker0/0222.wav\n",
            " 96% 557/578 [03:28<00:07,  2.66it/s]dataset/32k/speaker0/0365.wav\n",
            " 97% 558/578 [03:29<00:07,  2.66it/s]dataset/32k/speaker0/0519.wav\n",
            " 97% 559/578 [03:29<00:07,  2.64it/s]dataset/32k/speaker0/0225.wav\n",
            " 97% 560/578 [03:29<00:06,  2.70it/s]dataset/32k/speaker0/0008.wav\n",
            " 97% 561/578 [03:30<00:06,  2.70it/s]dataset/32k/speaker0/0363.wav\n",
            " 97% 562/578 [03:30<00:06,  2.53it/s]dataset/32k/speaker0/0207.wav\n",
            " 97% 563/578 [03:30<00:05,  2.57it/s]dataset/32k/speaker0/0260.wav\n",
            " 98% 564/578 [03:31<00:05,  2.59it/s]dataset/32k/speaker0/0267.wav\n",
            " 98% 565/578 [03:31<00:04,  2.60it/s]dataset/32k/speaker0/0566.wav\n",
            " 98% 566/578 [03:32<00:04,  2.65it/s]dataset/32k/speaker0/0095.wav\n",
            " 98% 567/578 [03:32<00:04,  2.60it/s]dataset/32k/speaker0/0059.wav\n",
            " 98% 568/578 [03:32<00:03,  2.66it/s]dataset/32k/speaker0/0513.wav\n",
            " 98% 569/578 [03:33<00:03,  2.65it/s]dataset/32k/speaker0/0099.wav\n",
            " 99% 570/578 [03:33<00:03,  2.34it/s]dataset/32k/speaker0/0372.wav\n",
            " 99% 571/578 [03:34<00:03,  2.13it/s]dataset/32k/speaker0/0028.wav\n",
            " 99% 572/578 [03:34<00:02,  2.04it/s]dataset/32k/speaker0/0379.wav\n",
            " 99% 573/578 [03:35<00:02,  1.97it/s]dataset/32k/speaker0/0390.wav\n",
            " 99% 574/578 [03:35<00:02,  2.00it/s]dataset/32k/speaker0/0501.wav\n",
            " 99% 575/578 [03:36<00:01,  1.90it/s]dataset/32k/speaker0/0489.wav\n",
            "100% 576/578 [03:36<00:00,  2.00it/s]dataset/32k/speaker0/0194.wav\n",
            "100% 577/578 [03:37<00:00,  2.14it/s]dataset/32k/speaker0/0108.wav\n",
            "100% 578/578 [03:37<00:00,  2.66it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 至此 数据集预处理制作完毕，将数据集和相关文件保存到谷歌云盘的dataset文件夹下，方便下次训练使用\n",
        "#压缩dataset文件夹\n",
        "!zip -r dataset.zip /content/so-vits-svc/dataset\n",
        "#@markdown 自定义备份到谷歌云盘的dataset文件夹下的数据集文件夹名，避免混淆\n",
        "dataset_name_drive = \"train\"  #@param {type:\"string\"}\n",
        "DATASET_PATH_DRIVE = \"/content/drive/MyDrive/dataset/\" + dataset_name_drive\n",
        "!mkdir -p {DATASET_PATH_DRIVE}\n",
        "\n",
        "!cp /content/so-vits-svc/dataset.zip \"{DATASET_PATH_DRIVE}\"\n",
        "!cp configs/config.json \"{DATASET_PATH_DRIVE}\"\n",
        "!cp filelists/train.txt \"{DATASET_PATH_DRIVE}\"\n",
        "!cp filelists/val.txt \"{DATASET_PATH_DRIVE}\""
      ],
      "metadata": {
        "id": "Wo4OTmTAUXgj",
        "outputId": "4150ffe7-3733-41ff-a8e2-e6ff4ca8e903",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  adding: content/so-vits-svc/dataset/ (stored 0%)\n",
            "  adding: content/so-vits-svc/dataset/32k/ (stored 0%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/ (stored 0%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0572.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0213.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0119.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0301.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0192.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0491.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0040.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0329.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0280.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0370.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0511.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0349.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0405.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0403.wav.f0.npy (deflated 85%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0144.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0141.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0027.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0434.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0017.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0364.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0220.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0441.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0557.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0159.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0505.wav (deflated 26%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0196.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0341.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0402.wav.f0.npy (deflated 84%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0289.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0043.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0350.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0430.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0014.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0009.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0470.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0223.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0070.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0332.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0279.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0312.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0301.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0203.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0462.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0256.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0496.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0428.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0079.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0223.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0225.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0027.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0514.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0126.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0297.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0408.wav.f0.npy (deflated 78%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0504.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0110.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0467.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0410.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0143.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0558.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0526.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0567.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0249.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0387.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0046.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0141.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0511.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0338.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0039.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0097.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0559.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0543.wav (deflated 26%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0207.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0421.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0116.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0433.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0559.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0457.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0297.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0088.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0400.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0163.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0113.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0319.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0155.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0327.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0064.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0564.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0485.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0451.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0157.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0348.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0148.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0423.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0245.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0197.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0428.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0308.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0480.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0554.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0347.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0233.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0044.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0374.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0392.wav.f0.npy (deflated 82%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0281.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0151.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0352.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0262.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0344.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0268.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0218.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0323.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0370.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0069.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0291.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0453.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0226.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0250.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0302.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0278.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0025.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0099.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0490.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0158.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0092.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0100.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0547.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0505.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0468.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0117.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0277.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0324.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0236.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0110.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0194.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0443.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0523.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0425.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0088.wav.f0.npy (deflated 34%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0201.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0465.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0373.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0513.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0247.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0068.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0093.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0072.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0529.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0299.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0067.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0111.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0399.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0487.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0266.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0508.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0239.wav (deflated 29%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0180.wav.f0.npy (deflated 88%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0395.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0076.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0070.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0188.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0048.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0161.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0469.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0124.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0160.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0192.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0313.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0482.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0477.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0237.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0001.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0043.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0463.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0493.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0346.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0490.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0343.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0085.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0523.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0514.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0300.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0437.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0510.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0237.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0121.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0082.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0092.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0499.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0042.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0488.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0055.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0419.wav.f0.npy (deflated 85%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0052.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0506.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0379.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0458.wav.soft.pt (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0382.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0348.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0190.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0152.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0161.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0085.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0244.wav (deflated 22%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0038.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0329.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0191.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0539.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0369.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0281.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0507.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0525.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0136.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0404.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0445.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0446.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0131.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0240.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0163.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0381.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0202.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0017.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0199.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0004.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0265.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0557.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0424.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0218.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0417.wav.f0.npy (deflated 82%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0084.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0221.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0168.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0292.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0062.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0470.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0205.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0062.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0012.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0409.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0361.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0568.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0312.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0414.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0448.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0576.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0014.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0532.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0578.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0512.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0409.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0091.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0384.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0205.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0461.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0473.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0274.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0354.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0351.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0454.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0222.wav.f0.npy (deflated 34%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0427.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0276.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0149.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0232.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0285.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0559.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0212.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0201.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0482.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0269.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0073.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0551.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0528.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0440.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0241.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0277.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0179.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0265.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0081.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0234.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0077.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0260.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0148.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0430.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0036.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0507.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0362.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0539.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0169.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0309.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0527.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0164.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0501.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0459.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0035.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0486.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0578.wav.f0.npy (deflated 39%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0335.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0115.wav.f0.npy (deflated 65%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0542.wav.f0.npy (deflated 39%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0449.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0153.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0534.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0298.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0282.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0461.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0480.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0356.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0203.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0300.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0198.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0435.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0433.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0108.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0025.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0511.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0204.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0309.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0010.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0376.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0359.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0509.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0163.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0130.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0151.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0339.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0084.wav (deflated 24%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0049.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0263.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0495.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0506.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0204.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0115.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0120.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0233.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0393.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0432.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0282.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0117.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0268.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0102.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0362.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0339.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0182.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0184.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0015.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0305.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0411.wav.f0.npy (deflated 86%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0471.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0456.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0298.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0396.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0344.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0324.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0463.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0575.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0033.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0248.wav (deflated 26%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0039.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0526.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0178.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0320.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0091.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0054.wav (deflated 3%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0436.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0567.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0467.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0157.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0268.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0097.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0246.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0565.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0078.wav.soft.pt (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0315.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0522.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0019.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0307.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0017.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0227.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0575.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0425.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0316.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0134.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0130.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0290.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0051.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0429.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0234.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0221.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0062.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0181.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0248.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0133.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0175.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0182.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0112.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0176.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0155.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0269.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0217.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0465.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0128.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0306.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0107.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0371.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0460.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0110.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0109.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0169.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0519.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0534.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0277.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0348.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0550.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0572.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0452.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0257.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0202.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0103.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0105.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0357.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0415.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0271.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0060.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0064.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0543.wav.f0.npy (deflated 87%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0468.wav.f0.npy (deflated 35%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0552.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0474.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0106.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0072.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0353.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0252.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0462.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0219.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0471.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0206.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0023.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0114.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0061.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0125.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0299.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0189.wav (deflated 22%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0330.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0498.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0089.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0165.wav.f0.npy (deflated 69%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0117.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0093.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0013.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0030.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0502.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0106.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0308.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0074.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0561.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0337.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0566.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0576.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0090.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0083.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0210.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0526.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0250.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0252.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0043.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0404.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0513.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0391.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0470.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0434.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0540.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0542.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0454.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0275.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0288.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0574.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0405.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0206.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0296.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0105.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0434.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0244.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0521.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0448.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0172.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0304.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0431.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0375.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0354.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0125.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0245.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0364.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0180.wav.soft.pt (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0257.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0450.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0464.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0040.wav.f0.npy (deflated 65%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0426.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0075.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0539.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0442.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0523.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0090.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0021.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0534.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0290.wav.f0.npy (deflated 34%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0094.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0537.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0536.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0047.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0022.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0149.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0079.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0571.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0162.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0325.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0302.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0372.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0544.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0328.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0369.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0552.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0360.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0287.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0004.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0135.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0368.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0560.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0340.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0239.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0256.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0008.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0067.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0104.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0098.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0177.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0050.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0201.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0071.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0187.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0003.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0146.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0378.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0032.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0170.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0529.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0252.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0413.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0337.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0035.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0157.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0340.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0166.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0403.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0193.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0448.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0076.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0441.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0156.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0264.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0051.wav.f0.npy (deflated 71%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0284.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0518.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0212.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0178.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0259.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0485.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0394.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0230.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0361.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0257.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0174.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0215.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0357.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0079.wav.soft.pt (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0118.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0146.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0517.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0120.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0290.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0375.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0371.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0104.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0503.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0005.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0131.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0497.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0388.wav.f0.npy (deflated 92%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0358.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0570.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0182.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0508.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0553.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0151.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0321.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0306.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0493.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0494.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0450.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0510.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0527.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0504.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0057.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0552.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0112.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0022.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0022.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0100.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0144.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0479.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0074.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0380.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0483.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0321.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0489.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0445.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0525.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0301.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0469.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0547.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0326.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0128.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0436.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0283.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0467.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0431.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0548.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0476.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0239.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0521.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0195.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0420.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0407.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0125.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0333.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0429.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0196.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0385.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0215.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0293.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0487.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0112.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0118.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0150.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0281.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0126.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0345.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0053.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0466.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0284.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0057.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0186.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0545.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0394.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0192.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0365.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0267.wav.f0.npy (deflated 31%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0031.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0399.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0140.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0267.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0358.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0366.wav.f0.npy (deflated 68%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0126.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0077.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0303.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0154.wav (deflated 25%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0345.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0197.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0364.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0574.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0353.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0189.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0503.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0520.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0248.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0310.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0174.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0295.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0024.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0530.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0065.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0374.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0551.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0352.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0500.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0176.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0391.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0453.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0179.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0263.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0171.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0287.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0439.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0291.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0285.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0325.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0410.wav.f0.npy (deflated 86%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0327.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0384.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0349.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0373.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0213.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0568.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0016.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0421.wav.f0.npy (deflated 87%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0274.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0338.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0458.wav (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0453.wav.f0.npy (deflated 70%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0501.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0337.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0026.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0128.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0412.wav.f0.npy (deflated 74%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0476.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0398.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0232.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0113.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0317.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0162.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0218.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0272.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0269.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0333.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0028.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0495.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0076.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0036.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0380.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0413.wav.f0.npy (deflated 82%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0503.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0577.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0189.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0342.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0225.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0196.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0242.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0393.wav.f0.npy (deflated 86%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0258.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0440.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0383.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0129.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0172.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0006.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0376.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0369.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0528.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0495.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0395.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0326.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0455.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0057.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0435.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0032.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0223.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0465.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0533.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0197.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0179.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0543.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0390.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0392.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0304.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0007.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0535.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0417.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0387.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0318.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0472.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0455.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0389.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0393.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0210.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0460.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0367.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0270.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0041.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0346.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0289.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0030.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0177.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0242.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0121.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0334.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0355.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0123.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0556.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0488.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0427.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0438.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0563.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0386.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0484.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0415.wav.f0.npy (deflated 81%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0183.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0521.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0515.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0530.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0366.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0548.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0060.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0477.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0106.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0385.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0564.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0202.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0482.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0517.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0484.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0008.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0216.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0113.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0238.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0251.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0271.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0443.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0538.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0029.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0033.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0342.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0168.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0491.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0563.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0045.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0407.wav.f0.npy (deflated 77%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0165.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0146.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0227.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0007.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0359.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0510.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0432.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0320.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0165.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0496.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0518.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0480.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0411.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0233.wav (deflated 26%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0199.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0394.wav.f0.npy (deflated 77%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0221.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0134.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0380.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0288.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0080.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0360.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0103.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0500.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0287.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0568.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0475.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0390.wav.f0.npy (deflated 87%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0332.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0216.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0387.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0538.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0052.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0247.wav (deflated 22%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0173.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0249.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0374.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0132.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0132.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0389.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0018.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0554.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0386.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0180.wav (deflated 34%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0018.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0561.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0347.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0478.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0410.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0292.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0130.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0171.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0266.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0173.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0293.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0492.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0143.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0114.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0506.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0555.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0231.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0272.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0029.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0005.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0400.wav.f0.npy (deflated 74%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0026.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0140.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0522.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0078.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0439.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0350.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0550.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0019.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0565.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0124.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0220.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0024.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0528.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0104.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0294.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0343.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0306.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0074.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0264.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0555.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0464.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0187.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0381.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0072.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0058.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0273.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0368.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0095.wav.f0.npy (deflated 25%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0307.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0531.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0450.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0461.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0479.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0039.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0436.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0292.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0127.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0020.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0142.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0466.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0293.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0520.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0034.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0402.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0232.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0101.wav (deflated 30%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0330.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0007.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0253.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0280.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0546.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0209.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0066.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0138.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0059.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0366.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0258.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0317.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0313.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0378.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0236.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0363.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0331.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0109.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0535.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0561.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0490.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0278.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0049.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0111.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0051.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0444.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0154.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0123.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0119.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0217.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0475.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0423.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0311.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0278.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0120.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0546.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0545.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0336.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0009.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0139.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0428.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0063.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0414.wav.f0.npy (deflated 81%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0124.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0446.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0317.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0456.wav.f0.npy (deflated 69%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0512.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0541.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0443.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0234.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0359.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0447.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0382.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0254.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0107.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0424.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0020.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0488.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0422.wav.soft.pt (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0352.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0005.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0247.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0173.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0261.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0316.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0258.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0447.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0058.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0397.wav.f0.npy (deflated 79%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0145.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0398.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0066.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0002.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0200.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0054.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0417.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0516.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0439.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0294.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0037.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0377.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0304.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0169.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0401.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0485.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0216.wav.f0.npy (deflated 31%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0037.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0478.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0142.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0194.wav.f0.npy (deflated 65%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0153.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0024.wav.soft.pt (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0489.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0089.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0471.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0255.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0413.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0069.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0302.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0195.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0351.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0228.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0424.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0340.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0362.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0172.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0046.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0351.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0569.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0141.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0244.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0025.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0240.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0036.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0524.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0214.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0220.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0558.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0475.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0212.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0322.wav.f0.npy (deflated 69%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0068.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0184.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0089.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0070.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0229.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0191.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0537.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0529.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0222.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0129.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0516.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0505.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0177.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0412.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0155.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0073.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0416.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0312.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0540.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0243.wav (deflated 22%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0006.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0235.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0419.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0118.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0088.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0012.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0211.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0541.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0272.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0327.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0159.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0329.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0507.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0053.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0091.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0226.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0003.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0167.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0288.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0386.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0527.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0229.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0198.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0156.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0028.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0459.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0164.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0447.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0208.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0038.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0334.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0161.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0251.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0115.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0265.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0531.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0311.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0047.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0347.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0418.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0075.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0243.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0042.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0494.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0145.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0143.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0174.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0147.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0396.wav.f0.npy (deflated 86%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0524.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0246.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0154.wav.f0.npy (deflated 69%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0478.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0148.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0535.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0011.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0442.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0360.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0553.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0399.wav.f0.npy (deflated 77%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0186.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0264.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0175.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0411.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0082.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0483.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0322.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0105.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0004.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0084.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0569.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0209.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0498.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0508.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0145.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0545.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0266.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0254.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0282.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0388.wav (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0127.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0509.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0573.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0562.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0133.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0492.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0061.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0472.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0129.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0391.wav.f0.npy (deflated 85%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0137.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0299.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0195.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0055.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0420.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0236.wav (deflated 25%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0002.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0066.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0203.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0319.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0375.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0416.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0235.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0532.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0015.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0468.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0473.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0071.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0396.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0214.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0276.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0499.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0135.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0334.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0227.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0108.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0408.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0343.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0524.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0551.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0383.wav (deflated 6%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0516.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0059.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0199.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0530.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0200.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0053.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0020.wav.f0.npy (deflated 65%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0183.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0030.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0557.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0181.wav.f0.npy (deflated 39%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0533.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0047.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0093.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0289.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0087.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0280.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0318.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0576.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0284.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0238.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0538.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0056.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0515.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0275.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0019.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0001.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0217.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0341.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0240.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0515.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0190.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0119.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0016.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0324.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0103.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0397.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0048.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0133.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0026.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0309.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0256.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0101.wav.f0.npy (deflated 67%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0464.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0271.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0035.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0188.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0081.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0313.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0031.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0270.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0560.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0536.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0021.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0446.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0241.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0310.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0185.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0566.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0303.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0494.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0011.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0224.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0137.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0426.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0560.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0054.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0094.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0522.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0477.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0087.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0114.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0094.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0116.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0500.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0496.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0183.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0253.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0473.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0476.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0109.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0307.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0481.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0328.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0549.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0520.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0492.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0567.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0320.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0372.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0013.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0365.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0214.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0308.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0168.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0311.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0078.wav.f0.npy (deflated 76%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0286.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0261.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0333.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0231.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0455.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0377.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0509.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0555.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0355.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0006.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0542.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0444.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0416.wav.f0.npy (deflated 84%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0230.wav.f0.npy (deflated 66%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0563.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0570.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0367.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0316.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0371.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0457.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0149.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0303.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0015.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0044.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0065.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0137.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0063.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0297.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0206.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0441.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0402.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0298.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0569.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0040.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0041.wav (deflated 29%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0065.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0405.wav.f0.npy (deflated 79%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0533.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0226.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0314.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0571.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0073.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0023.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0483.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0245.wav (deflated 28%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0331.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0122.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0171.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0044.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0262.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0012.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0200.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0082.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0367.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0224.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0504.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0554.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0262.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0027.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0147.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0096.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0010.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0408.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0230.wav (deflated 27%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0335.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0274.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0086.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0429.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0403.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0452.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0577.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0502.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0235.wav (deflated 24%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0158.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0208.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0423.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0061.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0435.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0517.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0075.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0300.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0451.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0136.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0368.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0186.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0134.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0241.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0132.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0144.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0549.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0100.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0335.wav (deflated 7%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0350.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0211.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0175.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0541.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0550.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0331.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0537.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0246.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0472.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0400.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0228.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0376.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0286.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0502.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0420.wav.f0.npy (deflated 79%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0322.wav.soft.pt (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0479.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0229.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0083.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0139.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0401.wav.f0.npy (deflated 81%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0045.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0085.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0243.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0564.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0540.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0251.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0211.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0379.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0153.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0422.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0215.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0449.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0067.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0029.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0166.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0437.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0207.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0418.wav.f0.npy (deflated 76%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0474.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0096.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0406.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0060.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0377.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0345.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0002.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0318.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0357.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0138.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0184.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0111.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0127.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0255.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0361.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0427.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0261.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0422.wav.f0.npy (deflated 86%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0409.wav.f0.npy (deflated 83%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0315.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0122.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0001.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0325.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0170.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0544.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0102.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0373.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0160.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0486.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0451.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0058.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0457.wav.f0.npy (deflated 67%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0086.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0296.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0547.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0474.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0577.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0571.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0138.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0456.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0332.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0049.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0193.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0032.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0573.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0242.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0188.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0544.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0497.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0193.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0156.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0139.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0463.wav.f0.npy (deflated 44%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0512.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0185.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0081.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0354.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0080.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0295.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0353.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0425.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0452.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0558.wav.f0.npy (deflated 50%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0056.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0562.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0336.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0063.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0342.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0178.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0406.wav.f0.npy (deflated 84%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0209.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0573.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0310.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0083.wav (deflated 20%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0187.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0185.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0574.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0296.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0460.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0181.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0397.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0122.wav.f0.npy (deflated 60%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0419.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0383.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0205.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0009.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0454.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0254.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0231.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0349.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0273.wav.f0.npy (deflated 40%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0259.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0556.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0319.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0363.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0414.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0438.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0135.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0219.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0418.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0392.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0086.wav.f0.npy (deflated 33%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0237.wav (deflated 24%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0164.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0045.wav.f0.npy (deflated 67%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0328.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0438.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0279.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0445.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0167.wav (deflated 23%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0336.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0068.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0011.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0525.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0087.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0338.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0191.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0440.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0095.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0356.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0469.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0487.wav.soft.pt (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0378.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0099.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0013.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0098.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0449.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0147.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0250.wav (deflated 27%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0123.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0037.wav.f0.npy (deflated 62%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0152.wav.f0.npy (deflated 59%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0346.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0382.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0159.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0499.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0421.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0305.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0466.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0514.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0023.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0050.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0305.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0442.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0295.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0255.wav (deflated 26%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0069.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0341.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0385.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0458.wav.f0.npy (deflated 87%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0219.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0208.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0431.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0167.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0426.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0548.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0101.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0444.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0052.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0401.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0285.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0210.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0166.wav.f0.npy (deflated 54%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0213.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0518.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0433.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0102.wav.f0.npy (deflated 65%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0263.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0190.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0279.wav.f0.npy (deflated 51%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0003.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0034.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0160.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0370.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0136.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0532.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0150.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0536.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0016.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0314.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0064.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0330.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0437.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0038.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0283.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0273.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0531.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0224.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0415.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0096.wav.f0.npy (deflated 43%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0430.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0497.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0055.wav.f0.npy (deflated 49%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0459.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0014.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0238.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0323.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0314.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0090.wav.f0.npy (deflated 32%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0042.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0493.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0041.wav.f0.npy (deflated 76%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0121.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0152.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0491.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0565.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0098.wav (deflated 22%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0578.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0381.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0046.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0162.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0556.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0481.wav (deflated 9%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0283.wav (deflated 15%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0249.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0077.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0048.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0562.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0570.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0270.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0462.wav.f0.npy (deflated 37%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0344.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0546.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0228.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0356.wav (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0321.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0018.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0222.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0432.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0365.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0092.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0010.wav.f0.npy (deflated 56%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0140.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0323.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0519.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0034.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0253.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0291.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0294.wav.f0.npy (deflated 46%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0575.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0131.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0050.wav.f0.npy (deflated 42%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0355.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0225.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0150.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0008.wav (deflated 14%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0107.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0363.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0275.wav.f0.npy (deflated 41%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0207.wav (deflated 16%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0142.wav.f0.npy (deflated 63%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0260.wav (deflated 11%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0170.wav.f0.npy (deflated 64%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0326.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0315.wav.f0.npy (deflated 48%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0339.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0267.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0484.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0276.wav.f0.npy (deflated 38%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0566.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0286.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0259.wav.f0.npy (deflated 35%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0021.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0080.wav.f0.npy (deflated 58%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0384.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0056.wav.f0.npy (deflated 47%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0553.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0498.wav.f0.npy (deflated 36%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0097.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0204.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0398.wav.f0.npy (deflated 82%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0095.wav (deflated 17%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0059.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0260.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0513.wav (deflated 10%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0099.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0198.wav.f0.npy (deflated 57%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0372.wav (deflated 5%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0033.wav.f0.npy (deflated 55%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0519.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0358.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0404.wav.f0.npy (deflated 68%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0395.wav.f0.npy (deflated 79%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0406.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0389.wav.f0.npy (deflated 88%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0031.wav.f0.npy (deflated 61%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0028.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0116.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0481.wav.f0.npy (deflated 45%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0379.wav (deflated 4%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0388.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0486.wav.f0.npy (deflated 83%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0390.wav (deflated 12%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0501.wav (deflated 13%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0071.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0489.wav (deflated 21%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0412.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0572.wav.f0.npy (deflated 53%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0194.wav (deflated 19%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0407.wav.soft.pt (deflated 8%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0108.wav (deflated 18%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0158.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0549.wav.f0.npy (deflated 52%)\n",
            "  adding: content/so-vits-svc/dataset/32k/speaker0/0176.wav.soft.pt (deflated 8%)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 已经预处理过数据集的话，就可以跳过预处理部分 直接从云盘解压处理过的数据 以及配置文件\n",
        "#@markdown 从谷歌云盘加载预处理过的数据集，文件夹名和你备份的时候输入的一样\n",
        "back_up_name = \"train\"  #@param {type:\"string\"}\n",
        "BACK_UP_DATASET_PATH = \"/content/drive/MyDrive/dataset/\" + back_up_name\n",
        "!unzip {BACK_UP_DATASET_PATH}/dataset.zip -d /\n",
        "!cp {BACK_UP_DATASET_PATH}/config.json /content/so-vits-svc/configs/config.json\n",
        "!cp {BACK_UP_DATASET_PATH}/val.txt filelists/val.txt\n",
        "!cp {BACK_UP_DATASET_PATH}/train.txt filelists/train.txt\n",
        "\n",
        "\n",
        "# 拷贝云盘上保存的记录点\n",
        "# !cp /content/drive/MyDrive/G_800.pth logs/48k/\n",
        "# !cp /content/drive/MyDrive/D_800.pth logs/48k/"
      ],
      "metadata": {
        "id": "P2G6v_6zblWK",
        "outputId": "2747addc-5d0d-4a0b-a58b-bfe7ba113515",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  /content/drive/MyDrive/dataset/train/dataset.zip\n",
            "replace /content/so-vits-svc/dataset/32k/speaker0/0572.wav.soft.pt? [y]es, [n]o, [A]ll, [N]one, [r]ename: A\n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0572.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0213.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0119.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0301.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0192.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0491.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0040.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0329.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0280.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0370.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0511.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0349.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0405.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0403.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0144.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0141.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0027.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0434.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0017.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0364.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0220.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0441.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0557.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0159.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0505.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0196.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0341.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0402.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0289.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0043.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0350.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0430.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0014.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0009.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0470.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0223.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0070.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0332.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0279.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0312.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0301.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0203.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0462.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0256.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0496.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0428.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0079.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0223.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0225.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0027.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0514.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0126.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0297.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0408.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0504.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0110.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0467.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0410.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0143.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0558.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0526.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0567.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0249.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0387.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0046.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0141.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0511.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0338.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0039.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0097.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0559.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0543.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0207.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0421.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0116.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0433.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0559.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0457.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0297.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0088.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0400.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0163.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0113.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0319.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0155.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0327.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0064.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0564.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0485.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0451.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0157.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0348.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0148.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0423.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0245.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0197.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0428.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0308.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0480.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0554.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0347.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0233.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0044.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0374.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0392.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0281.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0151.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0352.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0262.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0344.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0268.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0218.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0323.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0370.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0069.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0291.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0453.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0226.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0250.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0302.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0278.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0025.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0099.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0490.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0158.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0092.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0100.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0547.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0505.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0468.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0117.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0277.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0324.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0236.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0110.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0194.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0443.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0523.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0425.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0088.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0201.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0465.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0373.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0513.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0247.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0068.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0093.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0072.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0529.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0299.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0067.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0111.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0399.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0487.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0266.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0508.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0239.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0180.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0395.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0076.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0070.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0188.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0048.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0161.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0469.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0124.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0160.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0192.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0313.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0482.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0477.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0237.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0001.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0043.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0463.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0493.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0346.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0490.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0343.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0085.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0523.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0514.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0300.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0437.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0510.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0237.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0121.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0082.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0092.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0499.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0042.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0488.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0055.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0419.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0052.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0506.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0379.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0458.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0382.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0348.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0190.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0152.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0161.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0085.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0244.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0038.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0329.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0191.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0539.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0369.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0281.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0507.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0525.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0136.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0404.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0445.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0446.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0131.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0240.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0163.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0381.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0202.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0017.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0199.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0004.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0265.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0557.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0424.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0218.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0417.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0084.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0221.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0168.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0292.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0062.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0470.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0205.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0062.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0012.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0409.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0361.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0568.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0312.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0414.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0448.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0576.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0014.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0532.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0578.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0512.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0409.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0091.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0384.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0205.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0461.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0473.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0274.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0354.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0351.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0454.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0222.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0427.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0276.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0149.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0232.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0285.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0559.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0212.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0201.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0482.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0269.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0073.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0551.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0528.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0440.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0241.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0277.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0179.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0265.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0081.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0234.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0077.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0260.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0148.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0430.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0036.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0507.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0362.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0539.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0169.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0309.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0527.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0164.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0501.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0459.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0035.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0486.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0578.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0335.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0115.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0542.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0449.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0153.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0534.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0298.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0282.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0461.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0480.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0356.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0203.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0300.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0198.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0435.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0433.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0108.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0025.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0511.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0204.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0309.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0010.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0376.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0359.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0509.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0163.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0130.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0151.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0339.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0084.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0049.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0263.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0495.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0506.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0204.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0115.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0120.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0233.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0393.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0432.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0282.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0117.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0268.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0102.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0362.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0339.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0182.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0184.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0015.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0305.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0411.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0471.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0456.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0298.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0396.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0344.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0324.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0463.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0575.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0033.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0248.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0039.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0526.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0178.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0320.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0091.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0054.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0436.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0567.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0467.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0157.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0268.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0097.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0246.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0565.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0078.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0315.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0522.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0019.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0307.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0017.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0227.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0575.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0425.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0316.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0134.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0130.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0290.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0051.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0429.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0234.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0221.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0062.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0181.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0248.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0133.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0175.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0182.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0112.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0176.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0155.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0269.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0217.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0465.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0128.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0306.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0107.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0371.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0460.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0110.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0109.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0169.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0519.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0534.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0277.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0348.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0550.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0572.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0452.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0257.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0202.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0103.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0105.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0357.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0415.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0271.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0060.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0064.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0543.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0468.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0552.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0474.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0106.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0072.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0353.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0252.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0462.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0219.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0471.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0206.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0023.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0114.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0061.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0125.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0299.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0189.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0330.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0498.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0089.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0165.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0117.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0093.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0013.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0030.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0502.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0106.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0308.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0074.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0561.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0337.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0566.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0576.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0090.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0083.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0210.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0526.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0250.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0252.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0043.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0404.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0513.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0391.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0470.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0434.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0540.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0542.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0454.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0275.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0288.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0574.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0405.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0206.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0296.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0105.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0434.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0244.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0521.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0448.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0172.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0304.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0431.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0375.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0354.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0125.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0245.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0364.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0180.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0257.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0450.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0464.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0040.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0426.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0075.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0539.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0442.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0523.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0090.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0021.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0534.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0290.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0094.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0537.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0536.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0047.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0022.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0149.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0079.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0571.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0162.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0325.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0302.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0372.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0544.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0328.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0369.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0552.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0360.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0287.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0004.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0135.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0368.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0560.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0340.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0239.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0256.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0008.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0067.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0104.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0098.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0177.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0050.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0201.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0071.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0187.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0003.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0146.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0378.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0032.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0170.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0529.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0252.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0413.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0337.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0035.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0157.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0340.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0166.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0403.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0193.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0448.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0076.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0441.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0156.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0264.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0051.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0284.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0518.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0212.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0178.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0259.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0485.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0394.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0230.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0361.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0257.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0174.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0215.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0357.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0079.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0118.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0146.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0517.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0120.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0290.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0375.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0371.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0104.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0503.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0005.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0131.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0497.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0388.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0358.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0570.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0182.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0508.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0553.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0151.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0321.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0306.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0493.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0494.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0450.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0510.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0527.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0504.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0057.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0552.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0112.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0022.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0022.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0100.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0144.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0479.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0074.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0380.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0483.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0321.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0489.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0445.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0525.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0301.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0469.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0547.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0326.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0128.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0436.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0283.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0467.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0431.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0548.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0476.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0239.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0521.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0195.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0420.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0407.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0125.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0333.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0429.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0196.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0385.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0215.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0293.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0487.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0112.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0118.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0150.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0281.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0126.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0345.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0053.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0466.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0284.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0057.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0186.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0545.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0394.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0192.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0365.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0267.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0031.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0399.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0140.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0267.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0358.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0366.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0126.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0077.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0303.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0154.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0345.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0197.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0364.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0574.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0353.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0189.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0503.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0520.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0248.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0310.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0174.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0295.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0024.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0530.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0065.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0374.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0551.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0352.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0500.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0176.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0391.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0453.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0179.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0263.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0171.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0287.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0439.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0291.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0285.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0325.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0410.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0327.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0384.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0349.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0373.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0213.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0568.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0016.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0421.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0274.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0338.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0458.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0453.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0501.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0337.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0026.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0128.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0412.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0476.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0398.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0232.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0113.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0317.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0162.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0218.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0272.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0269.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0333.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0028.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0495.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0076.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0036.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0380.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0413.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0503.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0577.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0189.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0342.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0225.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0196.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0242.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0393.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0258.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0440.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0383.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0129.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0172.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0006.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0376.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0369.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0528.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0495.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0395.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0326.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0455.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0057.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0435.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0032.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0223.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0465.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0533.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0197.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0179.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0543.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0390.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0392.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0304.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0007.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0535.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0417.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0387.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0318.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0472.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0455.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0389.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0393.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0210.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0460.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0367.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0270.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0041.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0346.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0289.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0030.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0177.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0242.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0121.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0334.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0355.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0123.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0556.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0488.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0427.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0438.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0563.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0386.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0484.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0415.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0183.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0521.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0515.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0530.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0366.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0548.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0060.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0477.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0106.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0385.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0564.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0202.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0482.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0517.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0484.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0008.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0216.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0113.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0238.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0251.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0271.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0443.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0538.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0029.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0033.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0342.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0168.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0491.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0563.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0045.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0407.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0165.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0146.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0227.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0007.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0359.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0510.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0432.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0320.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0165.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0496.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0518.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0480.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0411.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0233.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0199.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0394.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0221.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0134.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0380.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0288.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0080.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0360.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0103.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0500.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0287.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0568.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0475.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0390.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0332.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0216.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0387.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0538.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0052.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0247.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0173.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0249.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0374.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0132.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0132.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0389.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0018.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0554.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0386.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0180.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0018.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0561.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0347.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0478.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0410.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0292.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0130.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0171.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0266.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0173.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0293.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0492.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0143.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0114.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0506.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0555.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0231.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0272.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0029.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0005.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0400.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0026.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0140.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0522.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0078.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0439.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0350.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0550.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0019.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0565.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0124.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0220.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0024.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0528.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0104.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0294.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0343.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0306.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0074.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0264.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0555.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0464.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0187.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0381.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0072.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0058.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0273.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0368.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0095.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0307.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0531.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0450.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0461.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0479.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0039.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0436.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0292.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0127.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0020.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0142.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0466.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0293.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0520.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0034.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0402.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0232.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0101.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0330.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0007.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0253.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0280.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0546.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0209.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0066.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0138.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0059.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0366.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0258.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0317.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0313.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0378.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0236.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0363.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0331.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0109.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0535.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0561.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0490.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0278.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0049.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0111.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0051.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0444.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0154.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0123.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0119.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0217.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0475.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0423.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0311.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0278.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0120.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0546.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0545.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0336.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0009.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0139.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0428.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0063.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0414.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0124.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0446.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0317.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0456.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0512.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0541.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0443.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0234.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0359.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0447.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0382.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0254.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0107.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0424.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0020.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0488.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0422.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0352.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0005.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0247.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0173.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0261.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0316.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0258.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0447.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0058.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0397.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0145.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0398.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0066.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0002.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0200.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0054.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0417.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0516.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0439.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0294.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0037.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0377.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0304.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0169.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0401.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0485.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0216.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0037.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0478.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0142.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0194.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0153.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0024.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0489.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0089.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0471.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0255.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0413.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0069.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0302.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0195.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0351.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0228.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0424.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0340.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0362.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0172.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0046.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0351.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0569.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0141.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0244.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0025.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0240.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0036.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0524.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0214.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0220.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0558.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0475.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0212.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0322.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0068.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0184.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0089.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0070.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0229.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0191.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0537.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0529.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0222.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0129.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0516.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0505.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0177.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0412.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0155.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0073.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0416.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0312.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0540.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0243.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0006.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0235.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0419.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0118.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0088.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0012.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0211.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0541.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0272.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0327.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0159.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0329.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0507.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0053.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0091.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0226.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0003.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0167.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0288.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0386.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0527.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0229.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0198.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0156.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0028.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0459.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0164.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0447.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0208.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0038.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0334.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0161.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0251.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0115.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0265.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0531.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0311.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0047.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0347.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0418.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0075.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0243.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0042.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0494.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0145.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0143.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0174.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0147.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0396.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0524.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0246.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0154.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0478.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0148.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0535.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0011.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0442.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0360.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0553.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0399.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0186.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0264.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0175.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0411.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0082.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0483.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0322.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0105.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0004.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0084.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0569.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0209.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0498.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0508.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0145.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0545.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0266.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0254.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0282.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0388.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0127.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0509.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0573.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0562.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0133.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0492.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0061.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0472.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0129.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0391.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0137.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0299.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0195.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0055.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0420.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0236.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0002.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0066.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0203.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0319.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0375.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0416.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0235.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0532.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0015.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0468.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0473.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0071.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0396.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0214.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0276.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0499.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0135.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0334.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0227.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0108.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0408.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0343.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0524.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0551.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0383.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0516.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0059.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0199.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0530.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0200.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0053.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0020.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0183.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0030.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0557.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0181.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0533.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0047.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0093.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0289.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0087.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0280.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0318.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0576.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0284.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0238.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0538.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0056.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0515.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0275.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0019.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0001.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0217.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0341.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0240.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0515.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0190.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0119.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0016.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0324.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0103.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0397.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0048.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0133.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0026.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0309.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0256.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0101.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0464.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0271.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0035.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0188.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0081.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0313.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0031.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0270.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0560.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0536.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0021.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0446.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0241.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0310.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0185.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0566.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0303.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0494.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0011.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0224.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0137.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0426.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0560.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0054.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0094.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0522.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0477.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0087.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0114.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0094.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0116.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0500.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0496.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0183.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0253.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0473.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0476.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0109.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0307.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0481.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0328.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0549.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0520.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0492.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0567.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0320.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0372.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0013.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0365.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0214.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0308.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0168.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0311.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0078.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0286.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0261.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0333.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0231.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0455.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0377.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0509.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0555.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0355.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0006.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0542.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0444.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0416.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0230.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0563.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0570.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0367.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0316.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0371.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0457.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0149.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0303.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0015.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0044.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0065.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0137.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0063.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0297.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0206.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0441.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0402.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0298.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0569.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0040.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0041.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0065.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0405.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0533.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0226.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0314.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0571.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0073.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0023.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0483.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0245.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0331.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0122.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0171.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0044.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0262.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0012.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0200.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0082.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0367.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0224.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0504.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0554.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0262.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0027.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0147.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0096.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0010.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0408.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0230.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0335.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0274.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0086.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0429.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0403.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0452.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0577.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0502.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0235.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0158.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0208.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0423.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0061.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0435.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0517.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0075.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0300.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0451.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0136.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0368.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0186.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0134.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0241.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0132.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0144.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0549.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0100.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0335.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0350.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0211.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0175.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0541.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0550.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0331.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0537.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0246.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0472.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0400.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0228.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0376.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0286.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0502.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0420.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0322.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0479.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0229.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0083.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0139.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0401.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0045.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0085.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0243.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0564.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0540.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0251.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0211.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0379.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0153.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0422.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0215.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0449.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0067.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0029.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0166.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0437.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0207.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0418.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0474.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0096.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0406.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0060.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0377.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0345.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0002.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0318.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0357.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0138.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0184.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0111.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0127.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0255.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0361.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0427.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0261.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0422.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0409.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0315.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0122.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0001.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0325.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0170.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0544.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0102.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0373.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0160.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0486.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0451.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0058.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0457.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0086.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0296.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0547.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0474.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0577.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0571.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0138.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0456.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0332.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0049.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0193.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0032.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0573.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0242.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0188.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0544.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0497.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0193.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0156.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0139.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0463.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0512.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0185.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0081.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0354.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0080.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0295.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0353.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0425.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0452.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0558.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0056.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0562.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0336.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0063.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0342.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0178.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0406.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0209.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0573.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0310.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0083.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0187.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0185.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0574.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0296.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0460.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0181.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0397.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0122.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0419.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0383.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0205.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0009.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0454.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0254.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0231.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0349.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0273.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0259.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0556.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0319.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0363.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0414.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0438.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0135.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0219.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0418.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0392.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0086.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0237.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0164.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0045.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0328.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0438.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0279.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0445.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0167.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0336.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0068.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0011.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0525.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0087.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0338.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0191.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0440.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0095.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0356.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0469.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0487.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0378.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0099.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0013.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0098.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0449.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0147.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0250.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0123.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0037.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0152.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0346.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0382.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0159.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0499.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0421.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0305.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0466.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0514.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0023.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0050.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0305.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0442.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0295.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0255.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0069.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0341.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0385.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0458.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0219.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0208.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0431.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0167.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0426.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0548.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0101.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0444.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0052.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0401.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0285.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0210.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0166.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0213.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0518.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0433.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0102.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0263.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0190.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0279.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0003.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0034.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0160.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0370.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0136.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0532.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0150.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0536.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0016.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0314.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0064.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0330.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0437.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0038.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0283.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0273.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0531.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0224.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0415.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0096.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0430.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0497.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0055.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0459.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0014.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0238.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0323.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0314.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0090.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0042.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0493.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0041.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0121.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0152.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0491.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0565.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0098.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0578.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0381.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0046.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0162.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0556.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0481.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0283.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0249.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0077.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0048.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0562.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0570.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0270.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0462.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0344.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0546.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0228.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0356.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0321.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0018.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0222.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0432.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0365.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0092.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0010.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0140.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0323.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0519.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0034.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0253.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0291.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0294.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0575.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0131.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0050.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0355.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0225.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0150.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0008.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0107.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0363.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0275.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0207.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0142.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0260.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0170.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0326.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0315.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0339.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0267.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0484.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0276.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0566.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0286.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0259.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0021.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0080.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0384.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0056.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0553.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0498.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0097.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0204.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0398.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0095.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0059.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0260.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0513.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0099.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0198.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0372.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0033.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0519.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0358.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0404.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0395.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0406.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0389.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0031.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0028.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0116.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0481.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0379.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0388.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0486.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0390.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0501.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0071.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0489.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0412.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0572.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0194.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0407.wav.soft.pt  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0108.wav  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0158.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0549.wav.f0.npy  \n",
            "  inflating: /content/so-vits-svc/dataset/32k/speaker0/0176.wav.soft.pt  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 训练"
      ],
      "metadata": {
        "id": "ENoH-pShel7w"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title  选择是否将训练后的模型保存到谷歌云盘 和 是否使用预模型\n",
        "#@markdown ##选择你克隆的github仓库的分支和你最开始选的保持一致\n",
        "Clone = \"32k\" #@param [\"32k\",\"48k\"]\n",
        "\n",
        "#@markdown **将训练后的模型文件保存到谷歌云盘，勾选后，恢复训练时也需要勾选并执行**\n",
        "Save_to_drive = True #@param {type:\"boolean\"}\n",
        "if Save_to_drive:\n",
        "  !rm -rf /content/so-vits-svc/logs/\"{Clone}\"\n",
        "  !mkdir -p /content/drive/MyDrive/\"{Clone}\"\n",
        "  !ln -s /content/drive/MyDrive/\"{Clone}\" /content/so-vits-svc/logs/\"{Clone}\"\n",
        "\n",
        "#@markdown **首次训练下载预模型 之后继续训练则使用自己保存的记录点，无需再下载**\n",
        "\n",
        "#@markdown **使用预模型，下面打钩自动下载并启用**\n",
        "pre_pth = True #@param {type:\"boolean\"}\n",
        "if pre_pth:\n",
        "  !wget -P logs/\"{Clone}\"/ https://huggingface.co/innnky/sovits_pretrained/resolve/main/G_0.pth\n",
        "  !wget -P logs/\"{Clone}\"/ https://huggingface.co/innnky/sovits_pretrained/resolve/main/D_0.pth\n"
      ],
      "metadata": {
        "id": "l8J2ubh9KV5J",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "79549019-1b9a-436b-f69d-7bcf59a1bcd2"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2025-08-23 10:05:44--  https://huggingface.co/innnky/sovits_pretrained/resolve/main/G_0.pth\n",
            "Resolving huggingface.co (huggingface.co)... 18.164.174.55, 18.164.174.17, 18.164.174.118, ...\n",
            "Connecting to huggingface.co (huggingface.co)|18.164.174.55|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://cas-bridge.xethub.hf.co/xet-bridge-us/63912f8e0cf6b11c487ba3c8/a492e0a966e1bad059a3a1d9c6fab04a9d8136c89332a6f21999c4ef746f6c70?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=cas%2F20250823%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250823T100544Z&X-Amz-Expires=3600&X-Amz-Signature=1a83107e53a320b3855f57ec1e6344ce10c88249391db42e499b22aba0b5220a&X-Amz-SignedHeaders=host&X-Xet-Cas-Uid=public&response-content-disposition=inline%3B+filename*%3DUTF-8%27%27G_0.pth%3B+filename%3D%22G_0.pth%22%3B&x-id=GetObject&Expires=1755947144&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NTk0NzE0NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2FzLWJyaWRnZS54ZXRodWIuaGYuY28veGV0LWJyaWRnZS11cy82MzkxMmY4ZTBjZjZiMTFjNDg3YmEzYzgvYTQ5MmUwYTk2NmUxYmFkMDU5YTNhMWQ5YzZmYWIwNGE5ZDgxMzZjODkzMzJhNmYyMTk5OWM0ZWY3NDZmNmM3MCoifV19&Signature=V4apTYAHCoVvG2dDH8J6Zhaqx%7Ek9SoYNXMDnCuRNlxluHRv7bzW1HQasFy8WNqlZD1Ks02CzYRhazlEqv8vbQ0MZqvmL002dLUr9i5n-ReGxCjS1rc5kaxHtCf16dj1%7EwlyKnom51PyYQ7nG4HKjS5xcZVr%7E6GGncyLEPq71G7OxqeEEmyVxLLmzYMjLPLYS-ywVBPBjDKg-OGEaZKja7tCGZP8In36Lc5VriZpmp%7EbhWGmrLOSvYzsPSEZdi2y4wmVH9emkDWgwO6WkEG9-oWDeYwioY8zG5o4dZR4Ret7OU3JPdbh3MOxRga0KSVYdKjrKDYv-5z7EbF%7EXxZWwyQ__&Key-Pair-Id=K2L8F4GPSG1IFC [following]\n",
            "--2025-08-23 10:05:44--  https://cas-bridge.xethub.hf.co/xet-bridge-us/63912f8e0cf6b11c487ba3c8/a492e0a966e1bad059a3a1d9c6fab04a9d8136c89332a6f21999c4ef746f6c70?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=cas%2F20250823%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250823T100544Z&X-Amz-Expires=3600&X-Amz-Signature=1a83107e53a320b3855f57ec1e6344ce10c88249391db42e499b22aba0b5220a&X-Amz-SignedHeaders=host&X-Xet-Cas-Uid=public&response-content-disposition=inline%3B+filename*%3DUTF-8%27%27G_0.pth%3B+filename%3D%22G_0.pth%22%3B&x-id=GetObject&Expires=1755947144&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NTk0NzE0NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2FzLWJyaWRnZS54ZXRodWIuaGYuY28veGV0LWJyaWRnZS11cy82MzkxMmY4ZTBjZjZiMTFjNDg3YmEzYzgvYTQ5MmUwYTk2NmUxYmFkMDU5YTNhMWQ5YzZmYWIwNGE5ZDgxMzZjODkzMzJhNmYyMTk5OWM0ZWY3NDZmNmM3MCoifV19&Signature=V4apTYAHCoVvG2dDH8J6Zhaqx%7Ek9SoYNXMDnCuRNlxluHRv7bzW1HQasFy8WNqlZD1Ks02CzYRhazlEqv8vbQ0MZqvmL002dLUr9i5n-ReGxCjS1rc5kaxHtCf16dj1%7EwlyKnom51PyYQ7nG4HKjS5xcZVr%7E6GGncyLEPq71G7OxqeEEmyVxLLmzYMjLPLYS-ywVBPBjDKg-OGEaZKja7tCGZP8In36Lc5VriZpmp%7EbhWGmrLOSvYzsPSEZdi2y4wmVH9emkDWgwO6WkEG9-oWDeYwioY8zG5o4dZR4Ret7OU3JPdbh3MOxRga0KSVYdKjrKDYv-5z7EbF%7EXxZWwyQ__&Key-Pair-Id=K2L8F4GPSG1IFC\n",
            "Resolving cas-bridge.xethub.hf.co (cas-bridge.xethub.hf.co)... 18.164.174.110, 18.164.174.21, 18.164.174.68, ...\n",
            "Connecting to cas-bridge.xethub.hf.co (cas-bridge.xethub.hf.co)|18.164.174.110|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 233067461 (222M)\n",
            "Saving to: ‘logs/32k/G_0.pth.1’\n",
            "\n",
            "G_0.pth.1           100%[===================>] 222.27M  69.3MB/s    in 3.2s    \n",
            "\n",
            "2025-08-23 10:05:48 (68.5 MB/s) - ‘logs/32k/G_0.pth.1’ saved [233067461/233067461]\n",
            "\n",
            "--2025-08-23 10:05:48--  https://huggingface.co/innnky/sovits_pretrained/resolve/main/D_0.pth\n",
            "Resolving huggingface.co (huggingface.co)... 18.164.174.17, 18.164.174.55, 18.164.174.118, ...\n",
            "Connecting to huggingface.co (huggingface.co)|18.164.174.17|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://cas-bridge.xethub.hf.co/xet-bridge-us/63912f8e0cf6b11c487ba3c8/7bb9ec483b54640db54e78beb38eec75f901696ccb55dffad7b4c2ffbf51b707?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=cas%2F20250823%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250823T100548Z&X-Amz-Expires=3600&X-Amz-Signature=1167d540e4a3ddfe906bff27fb9dc1e82d537c720988de6523220c18e1453e71&X-Amz-SignedHeaders=host&X-Xet-Cas-Uid=public&response-content-disposition=inline%3B+filename*%3DUTF-8%27%27D_0.pth%3B+filename%3D%22D_0.pth%22%3B&x-id=GetObject&Expires=1755947148&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NTk0NzE0OH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2FzLWJyaWRnZS54ZXRodWIuaGYuY28veGV0LWJyaWRnZS11cy82MzkxMmY4ZTBjZjZiMTFjNDg3YmEzYzgvN2JiOWVjNDgzYjU0NjQwZGI1NGU3OGJlYjM4ZWVjNzVmOTAxNjk2Y2NiNTVkZmZhZDdiNGMyZmZiZjUxYjcwNyoifV19&Signature=h18njQ0k66Nef0M9MxL7UVlT0lWai-AiBNnUJyzgGovN%7EoUK-dtnI0xOHlCDnMzS4sfaJWneTaQYfip8u9YfIRkSP6Y5wmrlJV8t3wQ2FgYjs5JTTK7nqP2b-jSQH4CP6S-h1C%7EZDh04pfvz46z%7E%7E2B8fBvq5y%7EA7Gcf4DwIwz4sBf0B8IqXW9vo2BllScjwibyCjSg8-c9Iojy7jGUWP7uxlAF27975wgrpODXg%7EJX5nWz3PNcFmDyoYvy5R%7EGGp--OECJYa8g45fEmzL%7EQNbtQ50Iuqf4FY5EZeKo9Y2AiKFSg8uZiuC0QEmnsBJvE%7EDvd%7EHi6nURRgSYEnzcGrg__&Key-Pair-Id=K2L8F4GPSG1IFC [following]\n",
            "--2025-08-23 10:05:48--  https://cas-bridge.xethub.hf.co/xet-bridge-us/63912f8e0cf6b11c487ba3c8/7bb9ec483b54640db54e78beb38eec75f901696ccb55dffad7b4c2ffbf51b707?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=cas%2F20250823%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250823T100548Z&X-Amz-Expires=3600&X-Amz-Signature=1167d540e4a3ddfe906bff27fb9dc1e82d537c720988de6523220c18e1453e71&X-Amz-SignedHeaders=host&X-Xet-Cas-Uid=public&response-content-disposition=inline%3B+filename*%3DUTF-8%27%27D_0.pth%3B+filename%3D%22D_0.pth%22%3B&x-id=GetObject&Expires=1755947148&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NTk0NzE0OH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2FzLWJyaWRnZS54ZXRodWIuaGYuY28veGV0LWJyaWRnZS11cy82MzkxMmY4ZTBjZjZiMTFjNDg3YmEzYzgvN2JiOWVjNDgzYjU0NjQwZGI1NGU3OGJlYjM4ZWVjNzVmOTAxNjk2Y2NiNTVkZmZhZDdiNGMyZmZiZjUxYjcwNyoifV19&Signature=h18njQ0k66Nef0M9MxL7UVlT0lWai-AiBNnUJyzgGovN%7EoUK-dtnI0xOHlCDnMzS4sfaJWneTaQYfip8u9YfIRkSP6Y5wmrlJV8t3wQ2FgYjs5JTTK7nqP2b-jSQH4CP6S-h1C%7EZDh04pfvz46z%7E%7E2B8fBvq5y%7EA7Gcf4DwIwz4sBf0B8IqXW9vo2BllScjwibyCjSg8-c9Iojy7jGUWP7uxlAF27975wgrpODXg%7EJX5nWz3PNcFmDyoYvy5R%7EGGp--OECJYa8g45fEmzL%7EQNbtQ50Iuqf4FY5EZeKo9Y2AiKFSg8uZiuC0QEmnsBJvE%7EDvd%7EHi6nURRgSYEnzcGrg__&Key-Pair-Id=K2L8F4GPSG1IFC\n",
            "Resolving cas-bridge.xethub.hf.co (cas-bridge.xethub.hf.co)... 18.164.174.110, 18.164.174.21, 18.164.174.68, ...\n",
            "Connecting to cas-bridge.xethub.hf.co (cas-bridge.xethub.hf.co)|18.164.174.110|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 187018591 (178M)\n",
            "Saving to: ‘logs/32k/D_0.pth.1’\n",
            "\n",
            "D_0.pth.1           100%[===================>] 178.35M  65.3MB/s    in 2.7s    \n",
            "\n",
            "2025-08-23 10:05:51 (65.3 MB/s) - ‘logs/32k/D_0.pth.1’ saved [187018591/187018591]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title  开始训练\n",
        "#@markdown ##选择你克隆的github仓库的分支和你最开始选的保持一致\n",
        "Clone = \"32k\" #@param [\"32k\",\"48k\"]\n",
        "\n",
        "#@markdown **开始训练**\n",
        "\n",
        "#@markdown **启用tensorboard可视化数据**\n",
        "tensorboard_on = True #@param {type:\"boolean\"}\n",
        "if tensorboard_on:\n",
        "  %load_ext tensorboard\n",
        "  %tensorboard --logdir logs/\"{Clone}\"\n",
        "\n",
        "!python train.py -c configs/config.json -m \"{Clone}\"\n"
      ],
      "metadata": {
        "id": "-hEFFTCfZf57",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f559742e-4543-471f-a274-29b8277aa23d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "        (async () => {\n",
              "            const url = new URL(await google.colab.kernel.proxyPort(6006, {'cache': true}));\n",
              "            url.searchParams.set('tensorboardColab', 'true');\n",
              "            const iframe = document.createElement('iframe');\n",
              "            iframe.src = url;\n",
              "            iframe.setAttribute('width', '100%');\n",
              "            iframe.setAttribute('height', '800');\n",
              "            iframe.setAttribute('frameborder', 0);\n",
              "            document.body.appendChild(iframe);\n",
              "        })();\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "INFO:32k:[2.8410611152648926, 2.007469654083252, 3.256838798522949, 18.978647232055664, 0.8773359656333923, 8880, 9.885651616572276e-05]\n",
            "2025-08-23 11:04:15.273907: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947055.321146   18995 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947055.337132   18995 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947055.397949   18995 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947055.397990   18995 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947055.397994   18995 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947055.397998   18995 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 93 to ./logs/32k/G_8880.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 93 to ./logs/32k/D_8880.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8730.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8730.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 13 eval steps.\n",
            "INFO:32k:Train Epoch: 93 [81%]\n",
            "INFO:32k:[2.7063183784484863, 2.039865732192993, 4.723227500915527, 21.897430419921875, 1.0608532428741455, 8910, 9.885651616572276e-05]\n",
            "2025-08-23 11:05:26.468817: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947126.710398   19303 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947126.720805   19303 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947126.829204   19303 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947126.829242   19303 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947126.829246   19303 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947126.829250   19303 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 93 to ./logs/32k/G_8910.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 93 to ./logs/32k/D_8910.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8760.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8760.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 14 eval steps.\n",
            "INFO:32k:====> Epoch: 93\n",
            "INFO:32k:Train Epoch: 94 [12%]\n",
            "INFO:32k:[2.7258083820343018, 2.045316219329834, 4.547870635986328, 20.299945831298828, 0.8765556216239929, 8940, 9.884415910120204e-05]\n",
            "2025-08-23 11:06:32.405325: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947192.435485   19608 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947192.444355   19608 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947192.477499   19608 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947192.477553   19608 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947192.477558   19608 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947192.477562   19608 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/G_8940.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/D_8940.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8790.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8790.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 15 eval steps.\n",
            "INFO:32k:Train Epoch: 94 [44%]\n",
            "INFO:32k:[2.8503477573394775, 1.9151874780654907, 2.81365966796875, 22.700077056884766, 0.9820981621742249, 8970, 9.884415910120204e-05]\n",
            "2025-08-23 11:07:34.225928: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947254.282690   19874 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947254.354598   19874 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947254.899750   19874 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947254.899803   19874 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947254.899811   19874 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947254.899819   19874 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/G_8970.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/D_8970.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8820.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8820.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 16 eval steps.\n",
            "INFO:32k:Train Epoch: 94 [75%]\n",
            "INFO:32k:[2.7247509956359863, 1.7666771411895752, 3.8820736408233643, 20.602386474609375, 0.9384992718696594, 9000, 9.884415910120204e-05]\n",
            "2025-08-23 11:08:39.193827: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947319.429700   20142 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947319.444468   20142 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947319.501156   20142 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947319.501191   20142 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947319.501207   20142 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947319.501214   20142 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/G_9000.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 94 to ./logs/32k/D_9000.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8850.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8850.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 17 eval steps.\n",
            "INFO:32k:====> Epoch: 94\n",
            "INFO:32k:Train Epoch: 95 [6%]\n",
            "INFO:32k:[2.829838752746582, 1.6524229049682617, 3.5606608390808105, 20.59389877319336, 0.7647109031677246, 9030, 9.883180358131438e-05]\n",
            "2025-08-23 11:09:48.668241: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947388.697309   20454 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947388.707811   20454 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947388.745229   20454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947388.745261   20454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947388.745264   20454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947388.745268   20454 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/G_9030.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/D_9030.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8880.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8880.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 18 eval steps.\n",
            "INFO:32k:Train Epoch: 95 [38%]\n",
            "INFO:32k:[2.892085075378418, 1.7558873891830444, 3.0911502838134766, 18.491985321044922, 0.8700196146965027, 9060, 9.883180358131438e-05]\n",
            "2025-08-23 11:11:00.754398: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947460.795981   20766 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947460.807286   20766 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947460.847070   20766 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947460.847104   20766 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947460.847109   20766 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947460.847113   20766 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/G_9060.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/D_9060.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8910.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8910.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 19 eval steps.\n",
            "INFO:32k:Train Epoch: 95 [69%]\n",
            "INFO:32k:[2.906712055206299, 1.9551713466644287, 2.6034865379333496, 18.45047378540039, 1.1927070617675781, 9090, 9.883180358131438e-05]\n",
            "2025-08-23 11:12:05.632570: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947525.662003   21060 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947525.672406   21060 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947525.706536   21060 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947525.706563   21060 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947525.706568   21060 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947525.706572   21060 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/G_9090.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 95 to ./logs/32k/D_9090.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8940.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8940.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 20 eval steps.\n",
            "INFO:32k:====> Epoch: 95\n",
            "INFO:32k:Train Epoch: 96 [0%]\n",
            "INFO:32k:[2.5195534229278564, 2.0090317726135254, 3.4018285274505615, 18.965641021728516, 1.081500768661499, 9120, 9.881944960586671e-05]\n",
            "2025-08-23 11:13:12.556644: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947592.809536   21353 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947592.881132   21353 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947593.398249   21353 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947593.398297   21353 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947593.398302   21353 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947593.398309   21353 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/G_9120.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/D_9120.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_8970.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_8970.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 21 eval steps.\n",
            "INFO:32k:Train Epoch: 96 [31%]\n",
            "INFO:32k:[2.6782054901123047, 1.7961852550506592, 2.6691842079162598, 18.60692024230957, 0.970860481262207, 9150, 9.881944960586671e-05]\n",
            "2025-08-23 11:14:22.801190: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947662.830139   21675 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947662.840745   21675 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947662.874108   21675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947662.874144   21675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947662.874148   21675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947662.874152   21675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/G_9150.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/D_9150.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9000.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9000.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 22 eval steps.\n",
            "INFO:32k:Train Epoch: 96 [62%]\n",
            "INFO:32k:[2.8825440406799316, 1.953104019165039, 3.1319897174835205, 20.225412368774414, 0.9733816981315613, 9180, 9.881944960586671e-05]\n",
            "2025-08-23 11:15:28.449949: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947728.503223   21967 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947728.517920   21967 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947728.573602   21967 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947728.573636   21967 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947728.573641   21967 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947728.573644   21967 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/G_9180.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/D_9180.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9030.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9030.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 23 eval steps.\n",
            "INFO:32k:Train Epoch: 96 [94%]\n",
            "INFO:32k:[2.644413471221924, 2.004065990447998, 3.3388779163360596, 19.605079650878906, 0.7604454159736633, 9210, 9.881944960586671e-05]\n",
            "2025-08-23 11:16:37.589138: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947797.833682   22271 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947797.904900   22271 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947798.429207   22271 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947798.429245   22271 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947798.429249   22271 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947798.429257   22271 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/G_9210.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 96 to ./logs/32k/D_9210.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9060.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9060.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 24 eval steps.\n",
            "INFO:32k:====> Epoch: 96\n",
            "INFO:32k:Train Epoch: 97 [25%]\n",
            "INFO:32k:[2.575882911682129, 1.816139578819275, 3.9952244758605957, 21.039169311523438, 0.984764575958252, 9240, 9.880709717466598e-05]\n",
            "2025-08-23 11:17:44.617733: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947864.670200   22572 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947864.684861   22572 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947864.740948   22572 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947864.740980   22572 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947864.740984   22572 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947864.740987   22572 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/G_9240.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/D_9240.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9090.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9090.pth\n",
            "INFO:32k:✅ New best mel loss: 0.468779 at step 9240\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/G_best_0.pth\n",
            "INFO:32k:Train Epoch: 97 [56%]\n",
            "INFO:32k:[2.5762686729431152, 2.0868430137634277, 3.540278434753418, 18.045711517333984, 0.8247051239013672, 9270, 9.880709717466598e-05]\n",
            "2025-08-23 11:19:32.312001: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755947972.597346   22974 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755947972.679836   22974 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755947973.261747   22974 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947973.261791   22974 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947973.261795   22974 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755947973.261800   22974 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/G_9270.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/D_9270.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9120.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9120.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 1 eval steps.\n",
            "INFO:32k:Train Epoch: 97 [88%]\n",
            "INFO:32k:[2.7099661827087402, 1.9563767910003662, 2.4024770259857178, 18.61859703063965, 0.9232433438301086, 9300, 9.880709717466598e-05]\n",
            "2025-08-23 11:20:46.017978: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948046.055880   23376 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948046.067831   23376 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948046.101618   23376 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948046.101652   23376 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948046.101656   23376 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948046.101660   23376 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/G_9300.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 97 to ./logs/32k/D_9300.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9150.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9150.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 2 eval steps.\n",
            "INFO:32k:====> Epoch: 97\n",
            "INFO:32k:Train Epoch: 98 [19%]\n",
            "INFO:32k:[2.909374237060547, 1.8273732662200928, 3.335066556930542, 20.806447982788086, 1.1516724824905396, 9330, 9.879474628751914e-05]\n",
            "2025-08-23 11:21:53.205717: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948113.253030   23678 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948113.264707   23678 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948113.339739   23678 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948113.339773   23678 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948113.339777   23678 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948113.339781   23678 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/G_9330.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/D_9330.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9180.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9180.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 3 eval steps.\n",
            "INFO:32k:Train Epoch: 98 [50%]\n",
            "INFO:32k:[2.8218188285827637, 1.884565830230713, 3.0868780612945557, 19.407386779785156, 0.7973966598510742, 9360, 9.879474628751914e-05]\n",
            "2025-08-23 11:22:54.262915: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948174.304179   23938 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948174.316899   23938 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948174.364636   23938 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948174.364674   23938 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948174.364681   23938 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948174.364688   23938 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/G_9360.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/D_9360.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9210.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9210.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 4 eval steps.\n",
            "INFO:32k:Train Epoch: 98 [81%]\n",
            "INFO:32k:[2.4787449836730957, 2.0782430171966553, 4.057273864746094, 19.507253646850586, 0.735679566860199, 9390, 9.879474628751914e-05]\n",
            "2025-08-23 11:23:59.697131: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948239.951891   24220 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948240.018621   24220 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948240.532145   24220 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948240.532196   24220 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948240.532204   24220 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948240.532210   24220 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/G_9390.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 98 to ./logs/32k/D_9390.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9240.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9240.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 5 eval steps.\n",
            "INFO:32k:====> Epoch: 98\n",
            "INFO:32k:Train Epoch: 99 [12%]\n",
            "INFO:32k:[2.766399621963501, 1.8996208906173706, 3.1288812160491943, 18.053325653076172, 0.9161054491996765, 9420, 9.87823969442332e-05]\n",
            "2025-08-23 11:25:10.786038: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948310.814593   24541 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948310.823974   24541 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948310.859627   24541 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948310.859658   24541 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948310.859663   24541 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948310.859666   24541 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/G_9420.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/D_9420.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9270.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9270.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 6 eval steps.\n",
            "INFO:32k:Train Epoch: 99 [44%]\n",
            "INFO:32k:[2.799320936203003, 1.9045771360397339, 2.2634034156799316, 19.90928077697754, 0.8306669592857361, 9450, 9.87823969442332e-05]\n",
            "2025-08-23 11:26:22.569666: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948382.607848   24841 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948382.617051   24841 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948382.664277   24841 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948382.664308   24841 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948382.664312   24841 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948382.664316   24841 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/G_9450.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/D_9450.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9300.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9300.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 7 eval steps.\n",
            "INFO:32k:Train Epoch: 99 [75%]\n",
            "INFO:32k:[2.753526210784912, 1.962363362312317, 2.9913980960845947, 20.32398223876953, 1.1856991052627563, 9480, 9.87823969442332e-05]\n",
            "2025-08-23 11:27:31.666155: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948451.919903   25127 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948451.989106   25127 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948452.521952   25127 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948452.521993   25127 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948452.521998   25127 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948452.522006   25127 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/G_9480.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 99 to ./logs/32k/D_9480.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9330.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9330.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 8 eval steps.\n",
            "INFO:32k:====> Epoch: 99\n",
            "INFO:32k:Train Epoch: 100 [6%]\n",
            "INFO:32k:[2.763258695602417, 1.7902023792266846, 2.8006632328033447, 18.73214340209961, 0.950883150100708, 9510, 9.877004914461517e-05]\n",
            "2025-08-23 11:28:36.935659: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948516.963560   25411 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948516.973419   25411 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948517.007290   25411 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948517.007325   25411 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948517.007332   25411 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948517.007338   25411 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/G_9510.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/D_9510.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9360.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9360.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 9 eval steps.\n",
            "INFO:32k:Train Epoch: 100 [38%]\n",
            "INFO:32k:[2.5644187927246094, 1.7658663988113403, 4.012643337249756, 20.671539306640625, 0.8952333331108093, 9540, 9.877004914461517e-05]\n",
            "2025-08-23 11:29:40.706757: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948580.752091   25684 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948580.767166   25684 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948580.825402   25684 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948580.825456   25684 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948580.825464   25684 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948580.825471   25684 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/G_9540.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/D_9540.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9390.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9390.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 10 eval steps.\n",
            "INFO:32k:Train Epoch: 100 [69%]\n",
            "INFO:32k:[2.7821664810180664, 1.7335278987884521, 4.205657482147217, 20.377824783325195, 0.9943494200706482, 9570, 9.877004914461517e-05]\n",
            "2025-08-23 11:30:46.841275: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948647.103437   25961 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948647.173055   25961 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948647.725984   25961 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948647.726032   25961 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948647.726036   25961 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948647.726040   25961 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/G_9570.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 100 to ./logs/32k/D_9570.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9420.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9420.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 11 eval steps.\n",
            "INFO:32k:====> Epoch: 100\n",
            "INFO:32k:Train Epoch: 101 [0%]\n",
            "INFO:32k:[2.862370491027832, 2.0837104320526123, 3.448493480682373, 19.715373992919922, 0.8008708953857422, 9600, 9.875770288847208e-05]\n",
            "2025-08-23 11:31:53.702462: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948713.736020   26249 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948713.747037   26249 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948713.808314   26249 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948713.808345   26249 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948713.808351   26249 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948713.808354   26249 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/G_9600.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/D_9600.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9450.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9450.pth\n",
            "INFO:32k:✅ New best mel loss: 0.468622 at step 9600\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/G_best_0.pth\n",
            "INFO:32k:Train Epoch: 101 [31%]\n",
            "INFO:32k:[2.7765402793884277, 1.9403188228607178, 3.026141881942749, 18.40354347229004, 0.9813084006309509, 9630, 9.875770288847208e-05]\n",
            "2025-08-23 11:33:30.354108: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948810.388781   26610 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948810.397648   26610 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948810.442756   26610 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948810.442788   26610 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948810.442793   26610 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948810.442797   26610 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/G_9630.pth\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/D_9630.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/G_9480.pth\n",
            "INFO:32k:.. Free up space by deleting ckpt logs/32k/D_9480.pth\n",
            "INFO:32k:⚠️ No improvement in mel loss for 1 eval steps.\n",
            "INFO:32k:Train Epoch: 101 [62%]\n",
            "INFO:32k:[2.6414504051208496, 1.888313889503479, 3.3287696838378906, 19.971656799316406, 0.7459002137184143, 9660, 9.875770288847208e-05]\n",
            "2025-08-23 11:34:39.209582: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1755948879.239598   26951 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1755948879.249062   26951 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "W0000 00:00:1755948879.282953   26951 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948879.282984   26951 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948879.282989   26951 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "W0000 00:00:1755948879.282993   26951 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1023)\n",
            "           2\tRESUME(arg=0, lineno=1023)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1026)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1026)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1026)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          20\tCOMPARE_OP(arg=68, lineno=1026)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1026)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1026)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1026)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1026)\n",
            "          40\tCOMPARE_OP(arg=92, lineno=1026)\n",
            "          44\tBINARY_OP(arg=1, lineno=1026)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1026)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "DEBUG:numba.core.byteflow:bytecode dump:\n",
            ">          0\tNOP(arg=None, lineno=1029)\n",
            "           2\tRESUME(arg=0, lineno=1029)\n",
            "           4\tLOAD_FAST(arg=0, lineno=1032)\n",
            "           6\tLOAD_CONST(arg=1, lineno=1032)\n",
            "           8\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          12\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          14\tLOAD_CONST(arg=2, lineno=1032)\n",
            "          16\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          20\tCOMPARE_OP(arg=2, lineno=1032)\n",
            "          24\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          26\tLOAD_CONST(arg=1, lineno=1032)\n",
            "          28\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          32\tLOAD_FAST(arg=0, lineno=1032)\n",
            "          34\tLOAD_CONST(arg=3, lineno=1032)\n",
            "          36\tBINARY_SUBSCR(arg=None, lineno=1032)\n",
            "          40\tCOMPARE_OP(arg=26, lineno=1032)\n",
            "          44\tBINARY_OP(arg=1, lineno=1032)\n",
            "          48\tRETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])\n",
            "DEBUG:numba.core.byteflow:stack: []\n",
            "DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)\n",
            "DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack []\n",
            "DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x12.3', '$const14.4']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$16binary_subscr.5']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$x24.7', '$const26.8']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$20compare_op.6', '$40compare_op.13']\n",
            "DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1032)\n",
            "DEBUG:numba.core.byteflow:stack ['$binop_and_44.14']\n",
            "DEBUG:numba.core.byteflow:end state. edges=[]\n",
            "DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------\n",
            "DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})\n",
            "DEBUG:numba.core.byteflow:defmap: {}\n",
            "DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})\n",
            "DEBUG:numba.core.byteflow:keep phismap: {}\n",
            "DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})\n",
            "DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------\n",
            "DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):\n",
            "AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})\n",
            "DEBUG:numba.core.interpreter:label 0:\n",
            "    x = arg(0, name=x)                       ['x']\n",
            "    $const6.1 = const(int, 0)                ['$const6.1']\n",
            "    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']\n",
            "    $const14.4 = const(int, -1)              ['$const14.4']\n",
            "    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']\n",
            "    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']\n",
            "    $const26.8 = const(int, 0)               ['$const26.8']\n",
            "    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']\n",
            "    $const34.11 = const(int, 1)              ['$const34.11']\n",
            "    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']\n",
            "    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']\n",
            "    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']\n",
            "    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']\n",
            "    return $48return_value.15                ['$48return_value.15']\n",
            "\n",
            "INFO:32k:Saving model and optimizer state at iteration 101 to ./logs/32k/G_9660.pth\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 手动将训练后的模型文件备份到谷歌云盘\n",
        "#@markdown 需要自己查看/content/so-vits-svc/logs/48k/文件夹下模型的文件名，手动修改下方命令末尾的文件名\n",
        "!mv /content/so-vits-svc/logs/48k/G_1000.pth /content/drive/MyDrive\n",
        "!mv /content/so-vits-svc/logs/48k/D_1000.pth /content/drive/MyDrive"
      ],
      "metadata": {
        "id": "KiNCWprSPlKH"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}